{"version":3,"sources":["../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/@wokwi/elements/dist/esm/led-element.js","../node_modules/@wokwi/elements/dist/esm/pushbutton-element.js","../node_modules/@wokwi/elements/dist/esm/resistor-element.js","../node_modules/@wokwi/elements/dist/esm/7segment-element.js","../node_modules/@wokwi/elements/dist/esm/lcd1602-font-a00.js","../node_modules/@wokwi/elements/dist/esm/lcd1602-element.js","../node_modules/@wokwi/elements/dist/esm/lcd1602-font-a02.js","../node_modules/@wokwi/elements/dist/esm/neopixel-element.js","../node_modules/@wokwi/elements/dist/esm/index.js","compile.ts","../node_modules/avr8js/dist/esm/cpu/cpu.js","../node_modules/avr8js/dist/esm/cpu/instruction.js","../node_modules/avr8js/dist/esm/cpu/interrupt.js","../node_modules/avr8js/dist/esm/peripherals/timer.js","../node_modules/avr8js/dist/esm/peripherals/gpio.js","../node_modules/avr8js/dist/esm/peripherals/usart.js","../node_modules/avr8js/dist/esm/peripherals/twi.js","../node_modules/avr8js/dist/esm/index.js","intelhex.ts","task-scheduler.ts","execute.ts","format-time.ts","cpu-performance.ts","utils/editor-history.util.ts","index.ts"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","n","nextSibling","insertBefore","removeNodes","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","insertNodeIntoTemplate","walkerNodeFilter","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","refNode","appendChild","insertCount","walkerIndex","directives","WeakMap","directive","f","args","d","set","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","SVGTemplateResult","getTemplateElement","svgElement","firstChild","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","NodePart","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","Map","stringsArray","key","join","keyString","render","Object","assign","appendInto","DefaultTemplateProcessor","prefix","defaultTemplateProcessor","svg","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","removeStylesFromLitTemplates","templates","styles","Set","from","querySelectorAll","add","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","condensedStyle","style","textContent","querySelector","nativeShadow","removes","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","delete","styleElement","_a","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","superProperties","getPrototypeOf","k","createProperty","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","_options","oldValue","_requestUpdate","getPropertyOptions","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","attribute","_valueHasChanged","hasChanged","_propertyValueFromAttribute","converter","fromAttribute","_propertyValueToAttribute","reflect","toAttribute","_saveInstanceProperties","constructor","_v","enableUpdating","_attributeToProperty","ctor","attrValue","propName","shouldRequestUpdate","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","property","internalProperty","query","queryAsync","queryAll","eventOptions","queryAssignedNodes","legacyCustomElement","clazz","define","standardCustomElement","kind","elements","customElement","classOrDescriptor","standardProperty","initializer","finisher","legacyProperty","proto","protoOrDescriptor","selector","renderRoot","legacyQuery","standardQuery","standardEventOptions","legacyEventOptions","slotName","flatten","slot","assignedNodes","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","unsafeCSS","textFromCSSResult","css","reduce","acc","idx","renderNotImplemented","LitElement","getStyles","_getUniqueStyles","userStyles","_styles","addStyles","reduceRight","unshift","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","templateResult","LEDElement","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","lightColors","brightness","color","lightColor","label","lightColorActual","opacity","EPSILON","PushbuttonElement","SPACE_KEY","pressed","down","up","keyCode","dispatchEvent","Event","ResistorElement","bandColors","exponent","base","round","numValue","parseFloat","breakValue","floor","SevenSegmentElement","fill","fontA00","Uint8Array","LCD1602Element","ROWS","COLS","charXSpacing","charYSpacing","backgroundColors","background","characters","font","cursor","blink","cursorX","cursorY","backlight","xSpacing","charX","charY","py","row","px","x","toFixed","y","xOffset","yOffset","darken","path","renderCursor","fontA02","NeoPixelElement","g","b","spotOpacity","maxOpacity","max","minOpacity","min","opacityDelta","multiplier","glowBase","cssVal","glowColor","cssColor","bkgWhite","glowOpacity","registerSpace","CPU","progMem","sramBytes","data16","Uint16Array","buffer","dataView","DataView","progBytes","writeHooks","pc","cycles","reset","SP","addr","hook","getUint16","setUint16","SREG","isTwoWordInstruction","opcode","avrInstruction","cpu","sum","R","sreg","ret","sp","A","readData","writeData","val1","val2","arg1","arg2","nextOpcode","skipSize","v1","v2","getInt8","setInt16","retAddr","z","r2","d2","a","avrInterrupt","timer01Dividers","WGM_NORMAL","WGM_PWM_PHASE_CORRECT","WGM_CTC","WGM_FASTPWM","TOV","OCFA","OCFB","TOIE","OCIEA","OCIEB","timer0Config","timer1Config","timer2Config","AVRTimer","config","mask","bits","lastCycle","ocrA","ocrB","TCNT","timerUpdated","OCRA","OCRB","divider","dividers","CS","delta","counterDelta","val","newVal","WGM","TIFR","interruptsEnabled","TIMSK","ovfInterrupt","compAInterrupt","compBInterrupt","TCCRA","TCCRB","portAConfig","portBConfig","portCConfig","portDConfig","portEConfig","portFConfig","portGConfig","portHConfig","portJConfig","portKConfig","portLConfig","PinState","AVRIOPort","portConfig","listeners","DDR","portValue","PORT","writeGpio","ddrMask","PIN","oldPortValue","listener","filter","ddr","port","bitMask","High","Low","InputPullUp","Input","usart0Config","UCSRA_RXC","UCSRA_TXC","UCSRA_UDRE","UCSRA_FE","UCSRA_DOR","UCSRA_UPE","UCSRA_U2X","UCSRA_MPCM","UCSRB_RXCIE","UCSRB_TXCIE","UCSRB_UDRIE","UCSRB_RXEN","UCSRB_TXEN","UCSRB_UCSZ2","UCSRB_RXB8","UCSRB_TXB8","UCSRC_UMSEL1","UCSRC_UMSEL0","UCSRC_UPM1","UCSRC_UPM0","UCSRC_USBS","UCSRC_UCSZ1","UCSRC_UCSZ0","UCSRC_UCPOL","AVRUSART","freqMHz","onByteTransmit","onLineTransmit","lineBuffer","UCSRA","UCSRB","UDR","ch","fromCharCode","ucsra","ucsrb","dataRegisterEmptyInterrupt","txCompleteInterrupt","UBRR","UBRRH","UBRRL","ucsz","TWCR_TWINT","TWCR_TWEA","TWCR_TWSTA","TWCR_TWSTO","TWCR_TWWC","TWCR_TWEN","TWCR_TWIE","TWSR_TWS_MASK","TWSR_TWPS1","TWSR_TWPS0","TWSR_TWPS_MASK","TWAR_TWA_MASK","TWAR_TWGCE","STATUS_BUS_ERROR","STATUS_TWI_IDLE","STATUS_START","STATUS_REPEATED_START","STATUS_SLAW_ACK","STATUS_SLAW_NACK","STATUS_DATA_SENT_ACK","STATUS_DATA_SENT_NACK","STATUS_DATA_LOST_ARBITRATION","STATUS_SLAR_ACK","STATUS_SLAR_NACK","STATUS_DATA_RECEIVED_ACK","STATUS_DATA_RECEIVED_NACK","twiConfig","NoopTWIEventHandler","twi","completeStart","completeStop","completeConnect","completeWrite","completeRead","AVRTWI","eventHandler","nextTick","updateStatus","TWCR","clearInt","status","twdrValue","TWDR","stop","connectToSlave","writeByte","ack","readByte","twiInterrupt","TWSR","TWBR","prescaler"],"mappings":"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,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EACxB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5B,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EACzB,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EACxB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG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CrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACtB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACzB,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACvB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EACxB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EACxB,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACvB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EACxB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACzB,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EACtB,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACzB,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACtB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EACvB,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EACxB,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC1B,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EACvB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EACtB,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3B,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACzB,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EACxB,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EACzB,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EACzB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EACtB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EACtB,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EACtB,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EACvB,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EACzB,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACzB,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACvB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EACvB,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACxB,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EACzB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EACxB,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EACzB,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EACxB,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EACxB,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EACvB,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3B,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EACzB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzB,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GACvB,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GACzB,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GACvB,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GACvB,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GACxB,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GACxB,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GACtB,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GACtB,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GACvB,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GACvB,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3B,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1B,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3B,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EACzB,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GACzB,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,GAAI,EAAG,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","file":"src.cfe5d9f8.map","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(slotName = '', flatten = false) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n                const slot = this.renderRoot.querySelector(selector);\n                return slot && slot.assignedNodes({ flatten });\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { css, customElement, html, LitElement, property } from 'lit-element';\r\nconst lightColors = {\r\n    red: '#ff8080',\r\n    green: '#80ff80',\r\n    blue: '#8080ff',\r\n    yellow: '#ffff80',\r\n    orange: '#ffcf80',\r\n    white: '#ffffff'\r\n};\r\nlet LEDElement = class LEDElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.value = false;\r\n        this.brightness = 1.0;\r\n        this.color = 'red';\r\n        this.lightColor = null;\r\n        this.label = '';\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      :host {\r\n        display: inline-block;\r\n      }\r\n\r\n      .led-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 40px;\r\n      }\r\n\r\n      .led-label {\r\n        font-size: 10px;\r\n        text-align: center;\r\n        color: gray;\r\n        position: relative;\r\n        line-height: 1;\r\n        top: -8px;\r\n      }\r\n    `;\r\n    }\r\n    render() {\r\n        const { color, lightColor } = this;\r\n        const lightColorActual = lightColor || lightColors[color] || '#ff8080';\r\n        const opacity = this.brightness ? 0.3 + this.brightness * 0.7 : 0;\r\n        const lightOn = this.value && this.brightness > Number.EPSILON;\r\n        return html `\r\n      <div class=\"led-container\">\r\n        <svg\r\n          width=\"40\"\r\n          height=\"50\"\r\n          version=\"1.2\"\r\n          viewBox=\"-10 -5 35.456 39.618\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <filter id=\"light1\" x=\"-0.8\" y=\"-0.8\" height=\"2.2\" width=\"2.8\">\r\n            <feGaussianBlur stdDeviation=\"2\" />\r\n          </filter>\r\n          <filter id=\"light2\" x=\"-0.8\" y=\"-0.8\" height=\"2.2\" width=\"2.8\">\r\n            <feGaussianBlur stdDeviation=\"4\" />\r\n          </filter>\r\n          <rect x=\"3.451\" y=\"19.379\" width=\"2.1514\" height=\"9.8273\" fill=\"#8c8c8c\" />\r\n          <path\r\n            d=\"m12.608 29.618c0-1.1736-0.86844-2.5132-1.8916-3.4024-0.41616-0.3672-1.1995-1.0015-1.1995-1.4249v-5.4706h-2.1614v5.7802c0 1.0584 0.94752 1.8785 1.9462 2.7482 0.44424 0.37584 1.3486 1.2496 1.3486 1.7694\"\r\n            fill=\"#8c8c8c\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v-5.9126c0-3.9132-3.168-7.0884-7.0855-7.0884-3.9125 0-7.0877 3.1694-7.0877 7.0884v13.649c1.4738 1.651 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8594v-1.5235c-7.4e-4 -1.1426-0.47444-2.2039-1.283-3.1061z\"\r\n            opacity=\".3\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v-5.9126c0-3.9132-3.168-7.0884-7.0855-7.0884-3.9125 0-7.0877 3.1694-7.0877 7.0884v13.649c1.4738 1.651 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8594v-1.5235c-7.4e-4 -1.1426-0.47444-2.2039-1.283-3.1061z\"\r\n            fill=\"#e6e6e6\"\r\n            opacity=\".5\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v3.1054c0 2.7389-3.1658 4.9651-7.0855 4.9651-3.9125 2e-5 -7.0877-2.219-7.0877-4.9651v4.6296c1.4738 1.6517 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8586l-4e-5 -1.5235c-7e-4 -1.1419-0.4744-2.2032-1.283-3.1054z\"\r\n            fill=\"#d1d1d1\"\r\n            opacity=\".9\"\r\n          />\r\n          <g>\r\n            <path\r\n              d=\"m14.173 13.001v3.1054c0 2.7389-3.1658 4.9651-7.0855 4.9651-3.9125 2e-5 -7.0877-2.219-7.0877-4.9651v4.6296c1.4738 1.6517 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8586l-4e-5 -1.5235c-7e-4 -1.1419-0.4744-2.2032-1.283-3.1054z\"\r\n              opacity=\".7\"\r\n            />\r\n            <path\r\n              d=\"m14.173 13.001v3.1054c0 2.7389-3.1658 4.9651-7.0855 4.9651-3.9125 2e-5 -7.0877-2.219-7.0877-4.9651v3.1054c1.4738 1.6502 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8586-7.4e-4 -1.1412-0.47444-2.2025-1.283-3.1047z\"\r\n              opacity=\".25\"\r\n            />\r\n            <ellipse cx=\"7.0877\" cy=\"16.106\" rx=\"7.087\" ry=\"4.9608\" opacity=\".25\" />\r\n          </g>\r\n          <polygon\r\n            points=\"2.2032 16.107 3.1961 16.107 3.1961 13.095 6.0156 13.095 10.012 8.8049 3.407 8.8049 2.2032 9.648\"\r\n            fill=\"#666666\"\r\n          />\r\n          <polygon\r\n            points=\"11.215 9.0338 7.4117 13.095 11.06 13.095 11.06 16.107 11.974 16.107 11.974 8.5241 10.778 8.5241\"\r\n            fill=\"#666666\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v-5.9126c0-3.9132-3.168-7.0884-7.0855-7.0884-3.9125 0-7.0877 3.1694-7.0877 7.0884v13.649c1.4738 1.651 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8594v-1.5235c-7.4e-4 -1.1426-0.47444-2.2039-1.283-3.1061z\"\r\n            fill=\"${color}\"\r\n            opacity=\".65\"\r\n          />\r\n          <g fill=\"#ffffff\">\r\n            <path\r\n              d=\"m10.388 3.7541 1.4364-0.2736c-0.84168-1.1318-2.0822-1.9577-3.5417-2.2385l0.25416 1.0807c0.76388 0.27072 1.4068 0.78048 1.8511 1.4314z\"\r\n              opacity=\".5\"\r\n            />\r\n            <path\r\n              d=\"m0.76824 19.926v1.5199c0.64872 0.5292 1.4335 0.97632 2.3076 1.3169v-1.525c-0.8784-0.33624-1.6567-0.78194-2.3076-1.3118z\"\r\n              opacity=\".5\"\r\n            />\r\n            <path\r\n              d=\"m11.073 20.21c-0.2556 0.1224-0.52992 0.22968-0.80568 0.32976-0.05832 0.01944-0.11736 0.04032-0.17784 0.05832-0.56376 0.17928-1.1614 0.31896-1.795 0.39456-0.07488 0.0094-0.1512 0.01872-0.22464 0.01944-0.3204 0.03024-0.64368 0.05832-0.97056 0.05832-0.14832 0-0.30744-0.01512-0.4716-0.02376-1.2002-0.05688-2.3306-0.31464-3.2976-0.73944l-2e-5 -8.3895v-4.8254c0-1.471 0.84816-2.7295 2.0736-3.3494l-0.02232-0.05328-1.2478-1.512c-1.6697 1.003-2.79 2.8224-2.79 4.9118v11.905c-0.04968-0.04968-0.30816-0.30888-0.48024-0.52992l-0.30744 0.6876c1.4011 1.4818 3.8088 2.4617 6.5426 2.4617 1.6798 0 3.2371-0.37368 4.5115-1.0022l-0.52704-0.40896-0.01006 0.0072z\"\r\n              opacity=\".5\"\r\n            />\r\n          </g>\r\n          <g class=\"light\" style=\"display: ${lightOn ? '' : 'none'}\">\r\n            <ellipse\r\n              cx=\"8\"\r\n              cy=\"10\"\r\n              rx=\"10\"\r\n              ry=\"10\"\r\n              fill=\"${lightColorActual}\"\r\n              filter=\"url(#light2)\"\r\n              style=\"opacity: ${opacity}\"\r\n            ></ellipse>\r\n            <ellipse cx=\"8\" cy=\"10\" rx=\"2\" ry=\"2\" fill=\"white\" filter=\"url(#light1)\"></ellipse>\r\n            <ellipse\r\n              cx=\"8\"\r\n              cy=\"10\"\r\n              rx=\"3\"\r\n              ry=\"3\"\r\n              fill=\"white\"\r\n              filter=\"url(#light1)\"\r\n              style=\"opacity: ${opacity}\"\r\n            ></ellipse>\r\n          </g>\r\n        </svg>\r\n        <span class=\"led-label\">${this.label}</span>\r\n      </div>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"value\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"brightness\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"color\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"lightColor\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"label\", void 0);\r\nLEDElement = __decorate([\r\n    customElement('wokwi-led')\r\n], LEDElement);\r\nexport { LEDElement };\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { css, customElement, html, LitElement, property } from 'lit-element';\r\nconst SPACE_KEY = 32;\r\nlet PushbuttonElement = class PushbuttonElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.color = 'red';\r\n        this.pressed = false;\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      button {\r\n        border: none;\r\n        background: none;\r\n        padding: 0;\r\n        margin: 0;\r\n        text-decoration: none;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n      }\r\n\r\n      button:active .button-circle {\r\n        fill: url(#grad-down);\r\n      }\r\n\r\n      .clickable-element {\r\n        cursor: pointer;\r\n      }\r\n    `;\r\n    }\r\n    render() {\r\n        const { color } = this;\r\n        return html `\r\n      <button\r\n        aria-label=\"${color} pushbutton\"\r\n        @mousedown=${this.down}\r\n        @mouseup=${this.up}\r\n        @touchstart=${this.down}\r\n        @touchend=${this.up}\r\n        @keydown=${(e) => e.keyCode === SPACE_KEY && this.down()}\r\n        @keyup=${(e) => e.keyCode === SPACE_KEY && this.up()}\r\n      >\r\n        <svg\r\n          width=\"18mm\"\r\n          height=\"12mm\"\r\n          version=\"1.1\"\r\n          viewBox=\"-3 0 18 12\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"grad-up\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"1\">\r\n              <stop stop-color=\"#ffffff\" offset=\"0\" />\r\n              <stop stop-color=\"${color}\" offset=\"0.3\" />\r\n              <stop stop-color=\"${color}\" offset=\"0.5\" />\r\n              <stop offset=\"1\" />\r\n            </linearGradient>\r\n            <linearGradient\r\n              id=\"grad-down\"\r\n              xlink:href=\"#grad-up\"\r\n              gradientTransform=\"rotate(180,0.5,0.5)\"\r\n            ></linearGradient>\r\n          </defs>\r\n          <rect x=\"0\" y=\"0\" width=\"12\" height=\"12\" rx=\".44\" ry=\".44\" fill=\"#464646\" />\r\n          <rect x=\".75\" y=\".75\" width=\"10.5\" height=\"10.5\" rx=\".211\" ry=\".211\" fill=\"#eaeaea\" />\r\n          <g fill=\"#1b1b1\">\r\n            <circle cx=\"1.767\" cy=\"1.7916\" r=\".37\" />\r\n            <circle cx=\"10.161\" cy=\"1.7916\" r=\".37\" />\r\n            <circle cx=\"10.161\" cy=\"10.197\" r=\".37\" />\r\n            <circle cx=\"1.767\" cy=\"10.197\" r=\".37\" />\r\n          </g>\r\n          <g fill=\"#eaeaea\">\r\n            <path\r\n              d=\"m-0.3538 1.4672c-0.058299 0-0.10523 0.0469-0.10523 0.10522v0.38698h-2.1504c-0.1166 0-0.21045 0.0938-0.21045 0.21045v0.50721c0 0.1166 0.093855 0.21045 0.21045 0.21045h2.1504v0.40101c0 0.0583 0.046928 0.10528 0.10523 0.10528h0.35723v-1.9266z\"\r\n            />\r\n            <path\r\n              d=\"m-0.35376 8.6067c-0.058299 0-0.10523 0.0469-0.10523 0.10523v0.38697h-2.1504c-0.1166 0-0.21045 0.0939-0.21045 0.21045v0.50721c0 0.1166 0.093855 0.21046 0.21045 0.21046h2.1504v0.401c0 0.0583 0.046928 0.10528 0.10523 0.10528h0.35723v-1.9266z\"\r\n            />\r\n            <path\r\n              d=\"m12.354 1.4672c0.0583 0 0.10522 0.0469 0.10523 0.10522v0.38698h2.1504c0.1166 0 0.21045 0.0938 0.21045 0.21045v0.50721c0 0.1166-0.09385 0.21045-0.21045 0.21045h-2.1504v0.40101c0 0.0583-0.04693 0.10528-0.10523 0.10528h-0.35723v-1.9266z\"\r\n            />\r\n            <path\r\n              d=\"m12.354 8.6067c0.0583 0 0.10523 0.0469 0.10523 0.10522v0.38698h2.1504c0.1166 0 0.21045 0.0938 0.21045 0.21045v0.50721c0 0.1166-0.09386 0.21045-0.21045 0.21045h-2.1504v0.40101c0 0.0583-0.04693 0.10528-0.10523 0.10528h-0.35723v-1.9266z\"\r\n            />\r\n          </g>\r\n          <g class=\"clickable-element\">\r\n            <circle class=\"button-circle\" cx=\"6\" cy=\"6\" r=\"3.822\" fill=\"url(#grad-up)\" />\r\n            <circle\r\n              cx=\"6\"\r\n              cy=\"6\"\r\n              r=\"2.9\"\r\n              fill=\"${color}\"\r\n              stroke=\"#2f2f2f\"\r\n              stroke-opacity=\".47\"\r\n              stroke-width=\".08\"\r\n            />\r\n          </g>\r\n        </svg>\r\n      </button>\r\n    `;\r\n    }\r\n    down() {\r\n        if (!this.pressed) {\r\n            this.pressed = true;\r\n            this.dispatchEvent(new Event('button-press'));\r\n        }\r\n    }\r\n    up() {\r\n        if (this.pressed) {\r\n            this.pressed = false;\r\n            this.dispatchEvent(new Event('button-release'));\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], PushbuttonElement.prototype, \"color\", void 0);\r\n__decorate([\r\n    property()\r\n], PushbuttonElement.prototype, \"pressed\", void 0);\r\nPushbuttonElement = __decorate([\r\n    customElement('wokwi-pushbutton')\r\n], PushbuttonElement);\r\nexport { PushbuttonElement };\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { customElement, html, LitElement, property } from 'lit-element';\r\nconst bandColors = {\r\n    [-2]: 'silver',\r\n    [-1]: '#c4a000',\r\n    0: 'black',\r\n    1: 'brown',\r\n    2: 'red',\r\n    3: 'orange',\r\n    4: 'yellow',\r\n    5: 'green',\r\n    6: 'blue',\r\n    7: 'violet',\r\n    8: 'gray',\r\n    9: 'white'\r\n};\r\nlet ResistorElement = class ResistorElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.value = '1000';\r\n    }\r\n    breakValue(value) {\r\n        const exponent = value >= 1e10\r\n            ? 9\r\n            : value >= 1e9\r\n                ? 8\r\n                : value >= 1e8\r\n                    ? 7\r\n                    : value >= 1e7\r\n                        ? 6\r\n                        : value >= 1e6\r\n                            ? 5\r\n                            : value >= 1e5\r\n                                ? 4\r\n                                : value >= 1e4\r\n                                    ? 3\r\n                                    : value >= 1e3\r\n                                        ? 2\r\n                                        : value >= 1e2\r\n                                            ? 1\r\n                                            : value >= 1e1\r\n                                                ? 0\r\n                                                : value >= 1\r\n                                                    ? -1\r\n                                                    : -2;\r\n        const base = Math.round(value / 10 ** exponent);\r\n        if (value === 0) {\r\n            return [0, 0];\r\n        }\r\n        if (exponent < 0 && base % 10 === 0) {\r\n            return [base / 10, exponent + 1];\r\n        }\r\n        return [Math.round(base % 100), exponent];\r\n    }\r\n    render() {\r\n        const { value } = this;\r\n        const numValue = parseFloat(value);\r\n        const [base, exponent] = this.breakValue(numValue);\r\n        const band1Color = bandColors[Math.floor(base / 10)];\r\n        const band2Color = bandColors[base % 10];\r\n        const band3Color = bandColors[exponent];\r\n        return html `\r\n      <svg\r\n        width=\"15.645mm\"\r\n        height=\"3mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 15.645 3\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n      >\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x2=\"0\"\r\n            y1=\"22.332\"\r\n            y2=\"38.348\"\r\n            gradientTransform=\"matrix(.14479 0 0 .14479 -23.155 -4.0573)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            spreadMethod=\"reflect\"\r\n          >\r\n            <stop stop-color=\"#323232\" offset=\"0\" />\r\n            <stop stop-color=\"#fff\" stop-opacity=\".42268\" offset=\"1\" />\r\n          </linearGradient>\r\n        </defs>\r\n        <rect y=\"1.1759\" width=\"15.645\" height=\".63826\" fill=\"#eaeaea\" />\r\n        <g stroke-width=\".14479\">\r\n          <path\r\n            d=\"m4.6918 0c-1.0586 0-1.9185 0.67468-1.9185 1.5022 0 0.82756 0.85995 1.4978 1.9185 1.4978 0.4241 0 0.81356-0.11167 1.1312-0.29411h4.0949c0.31802 0.18313 0.71075 0.29411 1.1357 0.29411 1.0586 0 1.9185-0.67015 1.9185-1.4978 0-0.8276-0.85995-1.5022-1.9185-1.5022-0.42499 0-0.81773 0.11098-1.1357 0.29411h-4.0949c-0.31765-0.18244-0.7071-0.29411-1.1312-0.29411z\"\r\n            fill=\"#d5b597\"\r\n          />\r\n          <path\r\n            d=\"m4.6918 0c-1.0586 0-1.9185 0.67468-1.9185 1.5022 0 0.82756 0.85995 1.4978 1.9185 1.4978 0.4241 0 0.81356-0.11167 1.1312-0.29411h4.0949c0.31802 0.18313 0.71075 0.29411 1.1357 0.29411 1.0586 0 1.9185-0.67015 1.9185-1.4978 0-0.8276-0.85995-1.5022-1.9185-1.5022-0.42499 0-0.81773 0.11098-1.1357 0.29411h-4.0949c-0.31765-0.18244-0.7071-0.29411-1.1312-0.29411z\"\r\n            fill=\"url(#a)\"\r\n            opacity=\".44886\"\r\n          />\r\n          <path\r\n            d=\"m4.6917 0c-0.10922 0-0.21558 0.00884-0.31985 0.022624v2.955c0.10426 0.013705 0.21063 0.02234 0.31985 0.02234 0.15603 0 0.3074-0.015363 0.4522-0.043551v-2.9129c-0.1448-0.028193-0.29617-0.043551-0.4522-0.043552z\"\r\n            fill=\"${band1Color}\"\r\n          />\r\n          <path d=\"m6.4482 0.29411v2.4117h0.77205v-2.4117z\" fill=\"${band2Color}\" />\r\n          <path d=\"m8.5245 0.29411v2.4117h0.77205v-2.4117z\" fill=\"${band3Color}\" />\r\n          <path\r\n            d=\"m11.054 0c-0.15608 0-0.30749 0.015253-0.45277 0.043268v2.9134c0.14527 0.028012 0.29669 0.043268 0.45277 0.043268 0.10912 0 0.21539-0.00867 0.31957-0.02234v-2.955c-0.10418-0.013767-0.21044-0.022624-0.31957-0.022624z\"\r\n            fill=\"#c4a000\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], ResistorElement.prototype, \"value\", void 0);\r\nResistorElement = __decorate([\r\n    customElement('wokwi-resistor')\r\n], ResistorElement);\r\nexport { ResistorElement };\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { css, customElement, html, LitElement, property } from 'lit-element';\r\nlet SevenSegmentElement = class SevenSegmentElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.color = 'red';\r\n        this.values = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      polygon {\r\n        transform: scale(0.9);\r\n        transform-origin: 50% 50%;\r\n        transform-box: fill-box;\r\n      }\r\n    `;\r\n    }\r\n    render() {\r\n        const { color, values } = this;\r\n        const fill = (index) => (values[index] ? color : '#ddd');\r\n        return html `\r\n      <svg\r\n        width=\"12mm\"\r\n        height=\"18.5mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 12 18.5\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g transform=\"skewX(-8) translate(2, 0)\">\r\n          <polygon points=\"2 0 8 0 9 1 8 2 2 2 1 1\" fill=\"${fill(0)}\" />\r\n          <polygon points=\"10 2 10 8 9 9 8 8 8 2 9 1\" fill=\"${fill(1)}\" />\r\n          <polygon points=\"10 10 10 16 9 17 8 16 8 10 9 9\" fill=\"${fill(2)}\" />\r\n          <polygon points=\"8 18 2 18 1 17 2 16 8 16 9 17\" fill=\"${fill(3)}\" />\r\n          <polygon points=\"0 16 0 10 1 9 2 10 2 16 1 17\" fill=\"${fill(4)}\" />\r\n          <polygon points=\"0 8 0 2 1 1 2 2 2 8 1 9\" fill=${fill(5)} />\r\n          <polygon points=\"2 8 8 8 9 9 8 10 2 10 1 9\" fill=${fill(6)} />\r\n        </g>\r\n        <circle cx=\"11\" cy=\"17\" r=\"1.1\" fill=\"${fill(7)}\" />\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], SevenSegmentElement.prototype, \"color\", void 0);\r\n__decorate([\r\n    property({ type: Array })\r\n], SevenSegmentElement.prototype, \"values\", void 0);\r\nSevenSegmentElement = __decorate([\r\n    customElement('wokwi-7segment')\r\n], SevenSegmentElement);\r\nexport { SevenSegmentElement };\r\n","// Font rasterized from datasheet: https://www.sparkfun.com/datasheets/LCD/HD44780.pdf\r\n// prettier-ignore\r\nexport const fontA00 = new Uint8Array([\r\n    /* 0 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 1 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 2 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 3 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 4 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 5 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 6 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 7 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 8 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 9 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 10 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 11 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 12 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 13 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 14 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 15 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 16 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 17 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 18 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 19 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 20 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 21 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 22 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 23 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 24 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 25 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 26 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 27 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 28 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 29 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 30 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 31 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 32 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 33 */ 4, 4, 4, 4, 0, 0, 4, 0,\r\n    /* 34 */ 10, 10, 10, 0, 0, 0, 0, 0,\r\n    /* 35 */ 10, 10, 31, 10, 31, 10, 10, 0,\r\n    /* 36 */ 4, 30, 5, 14, 20, 15, 4, 0,\r\n    /* 37 */ 3, 19, 8, 4, 2, 25, 24, 0,\r\n    /* 38 */ 6, 9, 5, 2, 21, 9, 22, 0,\r\n    /* 39 */ 6, 4, 2, 0, 0, 0, 0, 0,\r\n    /* 40 */ 8, 4, 2, 2, 2, 4, 8, 0,\r\n    /* 41 */ 2, 4, 8, 8, 8, 4, 2, 0,\r\n    /* 42 */ 0, 4, 21, 14, 21, 4, 0, 0,\r\n    /* 43 */ 0, 4, 4, 31, 4, 4, 0, 0,\r\n    /* 44 */ 0, 0, 0, 0, 6, 4, 2, 0,\r\n    /* 45 */ 0, 0, 0, 31, 0, 0, 0, 0,\r\n    /* 46 */ 0, 0, 0, 0, 0, 6, 6, 0,\r\n    /* 47 */ 0, 16, 8, 4, 2, 1, 0, 0,\r\n    /* 48 */ 14, 17, 25, 21, 19, 17, 14, 0,\r\n    /* 49 */ 4, 6, 4, 4, 4, 4, 14, 0,\r\n    /* 50 */ 14, 17, 16, 8, 4, 2, 31, 0,\r\n    /* 51 */ 31, 8, 4, 8, 16, 17, 14, 0,\r\n    /* 52 */ 8, 12, 10, 9, 31, 8, 8, 0,\r\n    /* 53 */ 31, 1, 15, 16, 16, 17, 14, 0,\r\n    /* 54 */ 12, 2, 1, 15, 17, 17, 14, 0,\r\n    /* 55 */ 31, 17, 16, 8, 4, 4, 4, 0,\r\n    /* 56 */ 14, 17, 17, 14, 17, 17, 14, 0,\r\n    /* 57 */ 14, 17, 17, 30, 16, 8, 6, 0,\r\n    /* 58 */ 0, 6, 6, 0, 6, 6, 0, 0,\r\n    /* 59 */ 0, 6, 6, 0, 6, 4, 2, 0,\r\n    /* 60 */ 8, 4, 2, 1, 2, 4, 8, 0,\r\n    /* 61 */ 0, 0, 31, 0, 31, 0, 0, 0,\r\n    /* 62 */ 2, 4, 8, 16, 8, 4, 2, 0,\r\n    /* 63 */ 14, 17, 16, 8, 4, 0, 4, 0,\r\n    /* 64 */ 14, 17, 16, 22, 21, 21, 14, 0,\r\n    /* 65 */ 14, 17, 17, 17, 31, 17, 17, 0,\r\n    /* 66 */ 15, 17, 17, 15, 17, 17, 15, 0,\r\n    /* 67 */ 14, 17, 1, 1, 1, 17, 14, 0,\r\n    /* 68 */ 7, 9, 17, 17, 17, 9, 7, 0,\r\n    /* 69 */ 31, 1, 1, 15, 1, 1, 31, 0,\r\n    /* 70 */ 31, 1, 1, 15, 1, 1, 1, 0,\r\n    /* 71 */ 14, 17, 1, 29, 17, 17, 30, 0,\r\n    /* 72 */ 17, 17, 17, 31, 17, 17, 17, 0,\r\n    /* 73 */ 14, 4, 4, 4, 4, 4, 14, 0,\r\n    /* 74 */ 28, 8, 8, 8, 8, 9, 6, 0,\r\n    /* 75 */ 17, 9, 5, 3, 5, 9, 17, 0,\r\n    /* 76 */ 1, 1, 1, 1, 1, 1, 31, 0,\r\n    /* 77 */ 17, 27, 21, 21, 17, 17, 17, 0,\r\n    /* 78 */ 17, 17, 19, 21, 25, 17, 17, 0,\r\n    /* 79 */ 14, 17, 17, 17, 17, 17, 14, 0,\r\n    /* 80 */ 15, 17, 17, 15, 1, 1, 1, 0,\r\n    /* 81 */ 14, 17, 17, 17, 21, 9, 22, 0,\r\n    /* 82 */ 15, 17, 17, 15, 5, 9, 17, 0,\r\n    /* 83 */ 30, 1, 1, 14, 16, 16, 15, 0,\r\n    /* 84 */ 31, 4, 4, 4, 4, 4, 4, 0,\r\n    /* 85 */ 17, 17, 17, 17, 17, 17, 14, 0,\r\n    /* 86 */ 17, 17, 17, 17, 17, 10, 4, 0,\r\n    /* 87 */ 17, 17, 17, 21, 21, 21, 10, 0,\r\n    /* 88 */ 17, 17, 10, 4, 10, 17, 17, 0,\r\n    /* 89 */ 17, 17, 17, 10, 4, 4, 4, 0,\r\n    /* 90 */ 31, 16, 8, 4, 2, 1, 31, 0,\r\n    /* 91 */ 7, 1, 1, 1, 1, 1, 7, 0,\r\n    /* 92 */ 17, 10, 31, 4, 31, 4, 4, 0,\r\n    /* 93 */ 14, 8, 8, 8, 8, 8, 14, 0,\r\n    /* 94 */ 4, 10, 17, 0, 0, 0, 0, 0,\r\n    /* 95 */ 0, 0, 0, 0, 0, 0, 31, 0,\r\n    /* 96 */ 2, 4, 8, 0, 0, 0, 0, 0,\r\n    /* 97 */ 0, 0, 14, 16, 30, 17, 30, 0,\r\n    /* 98 */ 1, 1, 13, 19, 17, 17, 15, 0,\r\n    /* 99 */ 0, 0, 14, 1, 1, 17, 14, 0,\r\n    /* 100 */ 16, 16, 22, 25, 17, 17, 30, 0,\r\n    /* 101 */ 0, 0, 14, 17, 31, 1, 14, 0,\r\n    /* 102 */ 12, 18, 2, 7, 2, 2, 2, 0,\r\n    /* 103 */ 0, 30, 17, 17, 30, 16, 14, 0,\r\n    /* 104 */ 1, 1, 13, 19, 17, 17, 17, 0,\r\n    /* 105 */ 4, 0, 6, 4, 4, 4, 14, 0,\r\n    /* 106 */ 8, 0, 12, 8, 8, 9, 6, 0,\r\n    /* 107 */ 1, 1, 9, 5, 3, 5, 9, 0,\r\n    /* 108 */ 6, 4, 4, 4, 4, 4, 14, 0,\r\n    /* 109 */ 0, 0, 11, 21, 21, 17, 17, 0,\r\n    /* 110 */ 0, 0, 13, 19, 17, 17, 17, 0,\r\n    /* 111 */ 0, 0, 14, 17, 17, 17, 14, 0,\r\n    /* 112 */ 0, 0, 15, 17, 15, 1, 1, 0,\r\n    /* 113 */ 0, 0, 22, 25, 30, 16, 16, 0,\r\n    /* 114 */ 0, 0, 13, 19, 1, 1, 1, 0,\r\n    /* 115 */ 0, 0, 14, 1, 14, 16, 15, 0,\r\n    /* 116 */ 2, 2, 7, 2, 2, 18, 12, 0,\r\n    /* 117 */ 0, 0, 17, 17, 17, 25, 22, 0,\r\n    /* 118 */ 0, 0, 17, 17, 17, 10, 4, 0,\r\n    /* 119 */ 0, 0, 17, 21, 21, 21, 10, 0,\r\n    /* 120 */ 0, 0, 17, 10, 4, 10, 17, 0,\r\n    /* 121 */ 0, 0, 17, 17, 30, 16, 14, 0,\r\n    /* 122 */ 0, 0, 31, 8, 4, 2, 31, 0,\r\n    /* 123 */ 8, 4, 4, 2, 4, 4, 8, 0,\r\n    /* 124 */ 4, 4, 4, 4, 4, 4, 4, 0,\r\n    /* 125 */ 2, 4, 4, 8, 4, 4, 2, 0,\r\n    /* 126 */ 0, 4, 8, 31, 8, 4, 0, 0,\r\n    /* 127 */ 0, 4, 2, 31, 2, 4, 0, 0,\r\n    /* 128 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 129 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 130 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 131 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 132 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 133 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 134 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 135 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 136 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 137 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 138 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 139 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 140 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 141 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 142 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 143 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 144 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 145 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 146 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 147 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 148 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 149 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 150 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 151 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 152 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 153 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 154 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 155 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 156 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 157 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 158 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 159 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 160 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 161 */ 0, 0, 0, 0, 7, 5, 7, 0,\r\n    /* 162 */ 28, 4, 4, 4, 0, 0, 0, 0,\r\n    /* 163 */ 0, 0, 0, 4, 4, 4, 7, 0,\r\n    /* 164 */ 0, 0, 0, 0, 1, 2, 4, 0,\r\n    /* 165 */ 0, 0, 0, 6, 6, 0, 0, 0,\r\n    /* 166 */ 0, 31, 16, 31, 16, 8, 4, 0,\r\n    /* 167 */ 0, 0, 31, 16, 12, 4, 2, 0,\r\n    /* 168 */ 0, 0, 8, 4, 6, 5, 4, 0,\r\n    /* 169 */ 0, 0, 4, 31, 17, 16, 12, 0,\r\n    /* 170 */ 0, 0, 31, 4, 4, 4, 31, 0,\r\n    /* 171 */ 0, 0, 8, 31, 12, 10, 9, 0,\r\n    /* 172 */ 0, 0, 2, 31, 18, 10, 2, 0,\r\n    /* 173 */ 0, 0, 0, 14, 8, 8, 31, 0,\r\n    /* 174 */ 0, 0, 15, 8, 15, 8, 15, 0,\r\n    /* 175 */ 0, 0, 0, 21, 21, 16, 12, 0,\r\n    /* 176 */ 0, 0, 0, 31, 0, 0, 0, 0,\r\n    /* 177 */ 31, 16, 20, 12, 4, 4, 2, 0,\r\n    /* 178 */ 16, 8, 4, 6, 5, 4, 4, 0,\r\n    /* 179 */ 4, 31, 17, 17, 16, 8, 4, 0,\r\n    /* 180 */ 0, 31, 4, 4, 4, 4, 31, 0,\r\n    /* 181 */ 8, 31, 8, 12, 10, 9, 8, 0,\r\n    /* 182 */ 2, 31, 18, 18, 18, 18, 9, 0,\r\n    /* 183 */ 4, 31, 4, 31, 4, 4, 4, 0,\r\n    /* 184 */ 0, 30, 18, 17, 16, 8, 6, 0,\r\n    /* 185 */ 2, 30, 9, 8, 8, 8, 4, 0,\r\n    /* 186 */ 0, 31, 16, 16, 16, 16, 31, 0,\r\n    /* 187 */ 10, 31, 10, 10, 8, 4, 2, 0,\r\n    /* 188 */ 0, 3, 16, 19, 16, 8, 7, 0,\r\n    /* 189 */ 0, 31, 16, 8, 4, 10, 17, 0,\r\n    /* 190 */ 2, 31, 18, 10, 2, 2, 28, 0,\r\n    /* 191 */ 0, 17, 17, 18, 16, 8, 6, 0,\r\n    /* 192 */ 0, 30, 18, 21, 24, 8, 6, 0,\r\n    /* 193 */ 8, 7, 4, 31, 4, 4, 2, 0,\r\n    /* 194 */ 0, 21, 21, 21, 16, 8, 4, 0,\r\n    /* 195 */ 14, 0, 31, 4, 4, 4, 2, 0,\r\n    /* 196 */ 2, 2, 2, 6, 10, 2, 2, 0,\r\n    /* 197 */ 4, 4, 31, 4, 4, 2, 1, 0,\r\n    /* 198 */ 0, 14, 0, 0, 0, 0, 31, 0,\r\n    /* 199 */ 0, 31, 16, 10, 4, 10, 1, 0,\r\n    /* 200 */ 4, 31, 8, 4, 14, 21, 4, 0,\r\n    /* 201 */ 8, 8, 8, 8, 8, 4, 2, 0,\r\n    /* 202 */ 0, 4, 8, 17, 17, 17, 17, 0,\r\n    /* 203 */ 1, 1, 31, 1, 1, 1, 30, 0,\r\n    /* 204 */ 0, 31, 16, 16, 16, 8, 6, 0,\r\n    /* 205 */ 0, 2, 5, 8, 16, 16, 0, 0,\r\n    /* 206 */ 4, 31, 4, 4, 21, 21, 4, 0,\r\n    /* 207 */ 0, 31, 16, 16, 10, 4, 8, 0,\r\n    /* 208 */ 0, 14, 0, 14, 0, 14, 16, 0,\r\n    /* 209 */ 0, 4, 2, 1, 17, 31, 16, 0,\r\n    /* 210 */ 0, 16, 16, 10, 4, 10, 1, 0,\r\n    /* 211 */ 0, 31, 2, 31, 2, 2, 28, 0,\r\n    /* 212 */ 2, 2, 31, 18, 10, 2, 2, 0,\r\n    /* 213 */ 0, 14, 8, 8, 8, 8, 31, 0,\r\n    /* 214 */ 0, 31, 16, 31, 16, 16, 31, 0,\r\n    /* 215 */ 14, 0, 31, 16, 16, 8, 4, 0,\r\n    /* 216 */ 9, 9, 9, 9, 8, 4, 2, 0,\r\n    /* 217 */ 0, 4, 5, 5, 21, 21, 13, 0,\r\n    /* 218 */ 0, 1, 1, 17, 9, 5, 3, 0,\r\n    /* 219 */ 0, 31, 17, 17, 17, 17, 31, 0,\r\n    /* 220 */ 0, 31, 17, 17, 16, 8, 4, 0,\r\n    /* 221 */ 0, 3, 0, 16, 16, 8, 7, 0,\r\n    /* 222 */ 4, 9, 2, 0, 0, 0, 0, 0,\r\n    /* 223 */ 7, 5, 7, 0, 0, 0, 0, 0,\r\n    /* 224 */ 0, 0, 18, 21, 9, 9, 22, 0,\r\n    /* 225 */ 10, 0, 14, 16, 30, 17, 30, 0,\r\n    /* 226 */ 0, 0, 14, 17, 15, 17, 15, 1,\r\n    /* 227 */ 0, 0, 14, 1, 6, 17, 14, 0,\r\n    /* 228 */ 0, 0, 17, 17, 17, 25, 23, 1,\r\n    /* 229 */ 0, 0, 30, 5, 9, 17, 14, 0,\r\n    /* 230 */ 0, 0, 12, 18, 17, 17, 15, 1,\r\n    /* 231 */ 0, 0, 30, 17, 17, 17, 30, 16,\r\n    /* 232 */ 0, 0, 28, 4, 4, 5, 2, 0,\r\n    /* 233 */ 0, 8, 11, 8, 0, 0, 0, 0,\r\n    /* 234 */ 8, 0, 12, 8, 8, 8, 8, 8,\r\n    /* 235 */ 0, 5, 2, 5, 0, 0, 0, 0,\r\n    /* 236 */ 0, 4, 14, 5, 21, 14, 4, 0,\r\n    /* 237 */ 2, 2, 7, 2, 7, 2, 30, 0,\r\n    /* 238 */ 14, 0, 13, 19, 17, 17, 17, 0,\r\n    /* 239 */ 10, 0, 14, 17, 17, 17, 14, 0,\r\n    /* 240 */ 0, 0, 13, 19, 17, 17, 15, 1,\r\n    /* 241 */ 0, 0, 22, 25, 17, 17, 30, 16,\r\n    /* 242 */ 0, 14, 17, 31, 17, 17, 14, 0,\r\n    /* 243 */ 0, 0, 0, 26, 21, 11, 0, 0,\r\n    /* 244 */ 0, 0, 14, 17, 17, 10, 27, 0,\r\n    /* 245 */ 10, 0, 17, 17, 17, 17, 25, 22,\r\n    /* 246 */ 31, 1, 2, 4, 2, 1, 31, 0,\r\n    /* 247 */ 0, 0, 31, 10, 10, 10, 25, 0,\r\n    /* 248 */ 31, 0, 17, 10, 4, 10, 17, 0,\r\n    /* 249 */ 0, 0, 17, 17, 17, 17, 30, 16,\r\n    /* 250 */ 0, 16, 15, 4, 31, 4, 4, 0,\r\n    /* 251 */ 0, 0, 31, 2, 30, 18, 17, 0,\r\n    /* 252 */ 0, 0, 31, 21, 31, 17, 17, 0,\r\n    /* 253 */ 0, 4, 0, 31, 0, 4, 0, 0,\r\n    /* 254 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 255 */ 31, 31, 31, 31, 31, 31, 31, 31,\r\n]);\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { customElement, html, LitElement, property, css, svg } from 'lit-element';\r\nimport { fontA00 } from './lcd1602-font-a00';\r\nconst ROWS = 2;\r\nconst COLS = 16;\r\nconst charXSpacing = 3.55;\r\nconst charYSpacing = 5.95;\r\nconst backgroundColors = {\r\n    green: '#6cb201',\r\n    blue: '#000eff'\r\n};\r\nlet LCD1602Element = class LCD1602Element extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.color = 'black';\r\n        this.background = 'green';\r\n        this.characters = new Uint8Array(32);\r\n        this.font = fontA00;\r\n        this.cursor = false;\r\n        this.blink = false;\r\n        this.cursorX = 0;\r\n        this.cursorY = 0;\r\n        this.backlight = true;\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      .cursor-blink {\r\n        animation: cursor-blink;\r\n      }\r\n\r\n      @keyframes cursor-blink {\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        25% {\r\n          opacity: 1;\r\n        }\r\n        75% {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    `;\r\n    }\r\n    path(characters) {\r\n        const xSpacing = 0.6;\r\n        const ySpacing = 0.7;\r\n        const result = [];\r\n        for (let i = 0; i < characters.length; i++) {\r\n            const charX = (i % COLS) * charXSpacing;\r\n            const charY = Math.floor(i / COLS) * charYSpacing;\r\n            for (let py = 0; py < 8; py++) {\r\n                const row = this.font[characters[i] * 8 + py];\r\n                for (let px = 0; px < 5; px++) {\r\n                    if (row & (1 << px)) {\r\n                        const x = (charX + px * xSpacing).toFixed(2);\r\n                        const y = (charY + py * ySpacing).toFixed(2);\r\n                        result.push(`M ${x} ${y}h0.55v0.65h-0.55Z`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result.join(' ');\r\n    }\r\n    renderCursor() {\r\n        const xOffset = 12.45 + this.cursorX * charXSpacing;\r\n        const yOffset = 12.55 + this.cursorY * charYSpacing;\r\n        if (this.cursorX < 0 || this.cursorX >= COLS || this.cursorY < 0 || this.cursorY >= ROWS) {\r\n            return null;\r\n        }\r\n        const result = [];\r\n        if (this.blink) {\r\n            result.push(svg `\r\n        <rect x=\"${xOffset}\" y=\"${yOffset}\" width=\"2.95\" height=\"5.55\" fill=\"${this.color}\">\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            values=\"0;0;0;0;1;1;0;0;0;0\"\r\n            dur=\"1s\"\r\n            fill=\"freeze\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </rect>\r\n      `);\r\n        }\r\n        if (this.cursor) {\r\n            const y = yOffset + 0.7 * 7;\r\n            result.push(svg `<rect x=\"${xOffset}\" y=\"${y}\" width=\"2.95\" height=\"0.65\" fill=\"${this.color}\" />`);\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        const { color, characters, background } = this;\r\n        const darken = this.backlight ? 0 : 0.5;\r\n        const actualBgColor = background in backgroundColors ? backgroundColors[background] : backgroundColors;\r\n        // Dimensions according to:\r\n        // https://www.winstar.com.tw/products/character-lcd-display-module/16x2-lcd.html\r\n        return html `\r\n      <svg\r\n        width=\"80mm\"\r\n        height=\"36mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 80 36\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <defs>\r\n          <pattern\r\n            id=\"characters\"\r\n            width=\"3.55\"\r\n            height=\"5.95\"\r\n            patternUnits=\"userSpaceOnUse\"\r\n            x=\"12.45\"\r\n            y=\"12.55\"\r\n          >\r\n            <rect width=\"2.95\" height=\"5.55\" fill-opacity=\"0.05\" />\r\n          </pattern>\r\n        </defs>\r\n        <rect width=\"80\" height=\"36\" fill=\"#087f45\" />\r\n        <rect x=\"4.95\" y=\"5.7\" width=\"71.2\" height=\"25.2\" />\r\n        <rect x=\"7.55\" y=\"10.3\" width=\"66\" height=\"16\" rx=\"1.5\" ry=\"1.5\" fill=\"${actualBgColor}\" />\r\n        <rect x=\"7.55\" y=\"10.3\" width=\"66\" height=\"16\" rx=\"1.5\" ry=\"1.5\" opacity=\"${darken}\" />\r\n        <rect x=\"12.45\" y=\"12.55\" width=\"56.2\" height=\"11.5\" fill=\"url(#characters)\" />\r\n        <path d=\"${this.path(characters)}\" transform=\"translate(12.45, 12.55)\" fill=\"${color}\" />\r\n        ${this.renderCursor()}\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"color\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"background\", void 0);\r\n__decorate([\r\n    property({ type: Array })\r\n], LCD1602Element.prototype, \"characters\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"font\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"cursor\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"blink\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"cursorX\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"cursorY\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"backlight\", void 0);\r\nLCD1602Element = __decorate([\r\n    customElement('wokwi-lcd1602')\r\n], LCD1602Element);\r\nexport { LCD1602Element };\r\n","// Font rasterized from datasheet: https://www.sparkfun.com/datasheets/LCD/HD44780.pdf\r\n// prettier-ignore\r\nexport const fontA02 = new Uint8Array([\r\n    /* 0 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 1 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 2 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 3 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 4 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 5 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 6 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 7 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 8 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 9 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 10 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 11 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 12 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 13 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 14 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 15 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 32 */ 0, 2, 6, 14, 30, 14, 6, 2,\r\n    /* 33 */ 0, 8, 12, 14, 15, 14, 12, 8,\r\n    /* 34 */ 0, 18, 9, 27, 0, 0, 0, 0,\r\n    /* 35 */ 0, 27, 18, 9, 0, 0, 0, 0,\r\n    /* 36 */ 0, 4, 14, 31, 0, 4, 14, 31,\r\n    /* 37 */ 0, 31, 14, 4, 0, 31, 14, 4,\r\n    /* 38 */ 0, 0, 14, 31, 31, 31, 14, 0,\r\n    /* 39 */ 0, 16, 16, 20, 18, 31, 2, 4,\r\n    /* 40 */ 0, 4, 14, 21, 4, 4, 4, 4,\r\n    /* 41 */ 0, 4, 4, 4, 4, 21, 14, 4,\r\n    /* 42 */ 0, 0, 4, 8, 31, 8, 4, 0,\r\n    /* 43 */ 0, 0, 4, 2, 31, 2, 4, 0,\r\n    /* 44 */ 0, 8, 4, 2, 4, 8, 0, 31,\r\n    /* 45 */ 0, 2, 4, 8, 4, 2, 0, 31,\r\n    /* 46 */ 0, 0, 4, 4, 14, 14, 31, 0,\r\n    /* 47 */ 0, 0, 31, 14, 14, 4, 4, 0,\r\n    /* 48 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 49 */ 0, 4, 4, 4, 4, 0, 0, 4,\r\n    /* 50 */ 0, 10, 10, 10, 0, 0, 0, 0,\r\n    /* 51 */ 0, 10, 10, 31, 10, 31, 10, 10,\r\n    /* 52 */ 0, 4, 30, 5, 14, 20, 15, 4,\r\n    /* 53 */ 0, 3, 19, 8, 4, 2, 25, 24,\r\n    /* 54 */ 0, 6, 9, 5, 2, 21, 9, 22,\r\n    /* 55 */ 0, 6, 4, 2, 0, 0, 0, 0,\r\n    /* 56 */ 0, 8, 4, 2, 2, 2, 4, 8,\r\n    /* 57 */ 0, 2, 4, 8, 8, 8, 4, 2,\r\n    /* 58 */ 0, 0, 4, 21, 14, 21, 4, 0,\r\n    /* 59 */ 0, 0, 4, 4, 31, 4, 4, 0,\r\n    /* 60 */ 0, 0, 0, 0, 0, 6, 4, 2,\r\n    /* 61 */ 0, 0, 0, 0, 31, 0, 0, 0,\r\n    /* 62 */ 0, 0, 0, 0, 0, 0, 6, 6,\r\n    /* 63 */ 0, 0, 16, 8, 4, 2, 1, 0,\r\n    /* 64 */ 0, 14, 17, 25, 21, 19, 17, 14,\r\n    /* 65 */ 0, 4, 6, 4, 4, 4, 4, 14,\r\n    /* 66 */ 0, 14, 17, 16, 8, 4, 2, 31,\r\n    /* 67 */ 0, 31, 8, 4, 8, 16, 17, 14,\r\n    /* 68 */ 0, 8, 12, 10, 9, 31, 8, 8,\r\n    /* 69 */ 0, 31, 1, 15, 16, 16, 17, 14,\r\n    /* 70 */ 0, 12, 2, 1, 15, 17, 17, 14,\r\n    /* 71 */ 0, 31, 17, 16, 8, 4, 4, 4,\r\n    /* 72 */ 0, 14, 17, 17, 14, 17, 17, 14,\r\n    /* 73 */ 0, 14, 17, 17, 30, 16, 8, 6,\r\n    /* 74 */ 0, 0, 6, 6, 0, 6, 6, 0,\r\n    /* 75 */ 0, 0, 6, 6, 0, 6, 4, 2,\r\n    /* 76 */ 0, 8, 4, 2, 1, 2, 4, 8,\r\n    /* 77 */ 0, 0, 0, 31, 0, 31, 0, 0,\r\n    /* 78 */ 0, 2, 4, 8, 16, 8, 4, 2,\r\n    /* 79 */ 0, 14, 17, 16, 8, 4, 0, 4,\r\n    /* 80 */ 0, 14, 17, 16, 22, 21, 21, 14,\r\n    /* 81 */ 0, 4, 10, 17, 17, 31, 17, 17,\r\n    /* 82 */ 0, 15, 17, 17, 15, 17, 17, 15,\r\n    /* 83 */ 0, 14, 17, 1, 1, 1, 17, 14,\r\n    /* 84 */ 0, 7, 9, 17, 17, 17, 9, 7,\r\n    /* 85 */ 0, 31, 1, 1, 15, 1, 1, 31,\r\n    /* 86 */ 0, 31, 1, 1, 15, 1, 1, 1,\r\n    /* 87 */ 0, 14, 17, 1, 29, 17, 17, 30,\r\n    /* 88 */ 0, 17, 17, 17, 31, 17, 17, 17,\r\n    /* 89 */ 0, 14, 4, 4, 4, 4, 4, 14,\r\n    /* 90 */ 0, 28, 8, 8, 8, 8, 9, 6,\r\n    /* 91 */ 0, 17, 9, 5, 3, 5, 9, 17,\r\n    /* 92 */ 0, 1, 1, 1, 1, 1, 1, 31,\r\n    /* 93 */ 0, 17, 27, 21, 21, 17, 17, 17,\r\n    /* 94 */ 0, 17, 17, 19, 21, 25, 17, 17,\r\n    /* 95 */ 0, 14, 17, 17, 17, 17, 17, 14,\r\n    /* 96 */ 0, 15, 17, 17, 15, 1, 1, 1,\r\n    /* 97 */ 0, 14, 17, 17, 17, 21, 9, 22,\r\n    /* 98 */ 0, 15, 17, 17, 15, 5, 9, 17,\r\n    /* 99 */ 0, 14, 17, 1, 14, 16, 17, 14,\r\n    /* 100 */ 0, 31, 4, 4, 4, 4, 4, 4,\r\n    /* 101 */ 0, 17, 17, 17, 17, 17, 17, 14,\r\n    /* 102 */ 0, 17, 17, 17, 17, 17, 10, 4,\r\n    /* 103 */ 0, 17, 17, 17, 21, 21, 21, 10,\r\n    /* 104 */ 0, 17, 17, 10, 4, 10, 17, 17,\r\n    /* 105 */ 0, 17, 17, 17, 10, 4, 4, 4,\r\n    /* 106 */ 0, 31, 16, 8, 4, 2, 1, 31,\r\n    /* 107 */ 0, 14, 2, 2, 2, 2, 2, 14,\r\n    /* 108 */ 0, 0, 1, 2, 4, 8, 16, 0,\r\n    /* 109 */ 0, 14, 8, 8, 8, 8, 8, 14,\r\n    /* 110 */ 0, 4, 10, 17, 0, 0, 0, 0,\r\n    /* 111 */ 0, 0, 0, 0, 0, 0, 0, 31,\r\n    /* 112 */ 0, 2, 4, 8, 0, 0, 0, 0,\r\n    /* 113 */ 0, 0, 0, 14, 16, 30, 17, 30,\r\n    /* 114 */ 0, 1, 1, 13, 19, 17, 17, 15,\r\n    /* 115 */ 0, 0, 0, 14, 1, 1, 17, 14,\r\n    /* 116 */ 0, 16, 16, 22, 25, 17, 17, 30,\r\n    /* 117 */ 0, 0, 0, 14, 17, 31, 1, 14,\r\n    /* 118 */ 0, 12, 18, 2, 7, 2, 2, 2,\r\n    /* 119 */ 0, 0, 0, 30, 17, 30, 16, 14,\r\n    /* 120 */ 0, 1, 1, 13, 19, 17, 17, 17,\r\n    /* 121 */ 0, 4, 0, 4, 6, 4, 4, 14,\r\n    /* 122 */ 0, 8, 0, 12, 8, 8, 9, 6,\r\n    /* 123 */ 0, 1, 1, 9, 5, 3, 5, 9,\r\n    /* 124 */ 0, 6, 4, 4, 4, 4, 4, 14,\r\n    /* 125 */ 0, 0, 0, 11, 21, 21, 21, 21,\r\n    /* 126 */ 0, 0, 0, 13, 19, 17, 17, 17,\r\n    /* 127 */ 0, 0, 0, 14, 17, 17, 17, 14,\r\n    /* 128 */ 0, 0, 0, 15, 17, 15, 1, 1,\r\n    /* 129 */ 0, 0, 0, 22, 25, 30, 16, 16,\r\n    /* 130 */ 0, 0, 0, 13, 19, 1, 1, 1,\r\n    /* 131 */ 0, 0, 0, 14, 1, 14, 16, 15,\r\n    /* 132 */ 0, 2, 2, 7, 2, 2, 18, 12,\r\n    /* 133 */ 0, 0, 0, 17, 17, 17, 25, 22,\r\n    /* 134 */ 0, 0, 0, 17, 17, 17, 10, 4,\r\n    /* 135 */ 0, 0, 0, 17, 17, 21, 21, 10,\r\n    /* 136 */ 0, 0, 0, 17, 10, 4, 10, 17,\r\n    /* 137 */ 0, 0, 0, 17, 17, 30, 16, 14,\r\n    /* 138 */ 0, 0, 0, 31, 8, 4, 2, 31,\r\n    /* 139 */ 0, 8, 4, 4, 2, 4, 4, 8,\r\n    /* 140 */ 0, 4, 4, 4, 4, 4, 4, 4,\r\n    /* 141 */ 0, 2, 4, 4, 8, 4, 4, 2,\r\n    /* 142 */ 0, 0, 0, 0, 22, 9, 0, 0,\r\n    /* 143 */ 0, 4, 10, 17, 17, 17, 31, 0,\r\n    /* 144 */ 0, 31, 17, 1, 15, 17, 17, 15,\r\n    /* 145 */ 30, 20, 20, 18, 17, 31, 17, 17,\r\n    /* 146 */ 0, 21, 21, 21, 14, 21, 21, 21,\r\n    /* 147 */ 0, 15, 16, 16, 12, 16, 16, 15,\r\n    /* 148 */ 0, 17, 17, 25, 21, 19, 17, 17,\r\n    /* 149 */ 10, 4, 17, 17, 25, 21, 19, 17,\r\n    /* 150 */ 0, 30, 20, 20, 20, 20, 21, 18,\r\n    /* 151 */ 0, 31, 17, 17, 17, 17, 17, 17,\r\n    /* 152 */ 0, 17, 17, 17, 10, 4, 2, 1,\r\n    /* 153 */ 0, 17, 17, 17, 17, 17, 31, 16,\r\n    /* 154 */ 0, 17, 17, 17, 30, 16, 16, 16,\r\n    /* 155 */ 0, 0, 21, 21, 21, 21, 21, 31,\r\n    /* 156 */ 0, 21, 21, 21, 21, 21, 31, 16,\r\n    /* 157 */ 0, 3, 2, 2, 14, 18, 18, 14,\r\n    /* 158 */ 0, 17, 17, 17, 19, 21, 21, 19,\r\n    /* 159 */ 0, 14, 17, 20, 26, 16, 17, 14,\r\n    /* 160 */ 0, 0, 0, 18, 21, 9, 9, 22,\r\n    /* 161 */ 0, 4, 12, 20, 20, 4, 7, 7,\r\n    /* 162 */ 0, 31, 17, 1, 1, 1, 1, 1,\r\n    /* 163 */ 0, 0, 0, 31, 10, 10, 10, 25,\r\n    /* 164 */ 0, 31, 1, 2, 4, 2, 1, 31,\r\n    /* 165 */ 0, 0, 0, 30, 9, 9, 9, 6,\r\n    /* 166 */ 12, 20, 28, 20, 20, 23, 27, 24,\r\n    /* 167 */ 0, 0, 16, 14, 5, 4, 4, 8,\r\n    /* 168 */ 0, 4, 14, 14, 14, 31, 4, 0,\r\n    /* 169 */ 0, 14, 17, 17, 31, 17, 17, 14,\r\n    /* 170 */ 0, 0, 14, 17, 17, 17, 10, 27,\r\n    /* 171 */ 0, 12, 18, 4, 10, 17, 17, 14,\r\n    /* 172 */ 0, 0, 0, 26, 21, 11, 0, 0,\r\n    /* 173 */ 0, 0, 10, 31, 31, 31, 14, 4,\r\n    /* 174 */ 0, 0, 0, 14, 1, 6, 17, 14,\r\n    /* 175 */ 0, 14, 17, 17, 17, 17, 17, 17,\r\n    /* 176 */ 0, 27, 27, 27, 27, 27, 27, 27,\r\n    /* 177 */ 0, 4, 0, 0, 4, 4, 4, 4,\r\n    /* 178 */ 0, 4, 14, 5, 5, 21, 14, 4,\r\n    /* 179 */ 0, 12, 2, 2, 7, 2, 18, 13,\r\n    /* 180 */ 0, 0, 17, 14, 10, 14, 17, 0,\r\n    /* 181 */ 0, 17, 10, 31, 4, 31, 4, 4,\r\n    /* 182 */ 0, 4, 4, 4, 0, 4, 4, 4,\r\n    /* 183 */ 0, 12, 18, 4, 10, 4, 9, 6,\r\n    /* 184 */ 0, 8, 20, 4, 31, 4, 5, 2,\r\n    /* 185 */ 0, 31, 17, 21, 29, 21, 17, 31,\r\n    /* 186 */ 0, 14, 16, 30, 17, 30, 0, 31,\r\n    /* 187 */ 0, 0, 20, 10, 5, 10, 20, 0,\r\n    /* 188 */ 0, 9, 21, 21, 23, 21, 21, 9,\r\n    /* 189 */ 0, 30, 17, 17, 30, 20, 18, 17,\r\n    /* 190 */ 0, 31, 17, 21, 17, 25, 21, 31,\r\n    /* 191 */ 0, 4, 2, 6, 0, 0, 0, 0,\r\n    /* 192 */ 6, 9, 9, 9, 6, 0, 0, 0,\r\n    /* 193 */ 0, 4, 4, 31, 4, 4, 0, 31,\r\n    /* 194 */ 6, 9, 4, 2, 15, 0, 0, 0,\r\n    /* 195 */ 7, 8, 6, 8, 7, 0, 0, 0,\r\n    /* 196 */ 7, 9, 7, 1, 9, 29, 9, 24,\r\n    /* 197 */ 0, 17, 17, 17, 25, 23, 1, 1,\r\n    /* 198 */ 0, 30, 25, 25, 30, 24, 24, 24,\r\n    /* 199 */ 0, 0, 0, 0, 6, 6, 0, 0,\r\n    /* 200 */ 0, 0, 0, 10, 17, 21, 21, 10,\r\n    /* 201 */ 2, 3, 2, 2, 7, 0, 0, 0,\r\n    /* 202 */ 0, 14, 17, 17, 17, 14, 0, 31,\r\n    /* 203 */ 0, 0, 5, 10, 20, 10, 5, 0,\r\n    /* 204 */ 17, 9, 5, 10, 13, 10, 30, 8,\r\n    /* 205 */ 17, 9, 5, 10, 21, 16, 8, 28,\r\n    /* 206 */ 3, 2, 3, 18, 27, 20, 28, 16,\r\n    /* 207 */ 0, 4, 0, 4, 2, 1, 17, 14,\r\n    /* 208 */ 2, 4, 4, 10, 17, 31, 17, 17,\r\n    /* 209 */ 8, 4, 4, 10, 17, 31, 17, 17,\r\n    /* 210 */ 4, 10, 0, 14, 17, 31, 17, 17,\r\n    /* 211 */ 22, 9, 0, 14, 17, 31, 17, 17,\r\n    /* 212 */ 10, 0, 4, 10, 17, 31, 17, 17,\r\n    /* 213 */ 4, 10, 4, 14, 17, 31, 17, 17,\r\n    /* 214 */ 0, 28, 6, 5, 29, 7, 5, 29,\r\n    /* 215 */ 14, 17, 1, 1, 17, 14, 8, 12,\r\n    /* 216 */ 2, 4, 0, 31, 1, 15, 1, 31,\r\n    /* 217 */ 8, 4, 0, 31, 1, 15, 1, 31,\r\n    /* 218 */ 4, 10, 0, 31, 1, 15, 1, 31,\r\n    /* 219 */ 0, 10, 0, 31, 1, 15, 1, 31,\r\n    /* 220 */ 2, 4, 0, 14, 4, 4, 4, 14,\r\n    /* 221 */ 8, 4, 0, 14, 4, 4, 4, 14,\r\n    /* 222 */ 4, 10, 0, 14, 4, 4, 4, 14,\r\n    /* 223 */ 0, 10, 0, 14, 4, 4, 4, 14,\r\n    /* 224 */ 0, 14, 18, 18, 23, 18, 18, 14,\r\n    /* 225 */ 22, 9, 0, 17, 19, 21, 25, 17,\r\n    /* 226 */ 2, 4, 14, 17, 17, 17, 17, 14,\r\n    /* 227 */ 8, 4, 14, 17, 17, 17, 17, 14,\r\n    /* 228 */ 4, 10, 0, 14, 17, 17, 17, 14,\r\n    /* 229 */ 22, 9, 0, 14, 17, 17, 17, 14,\r\n    /* 230 */ 10, 0, 14, 17, 17, 17, 17, 14,\r\n    /* 231 */ 0, 0, 17, 10, 4, 10, 17, 0,\r\n    /* 232 */ 0, 14, 4, 14, 21, 14, 4, 14,\r\n    /* 233 */ 2, 4, 17, 17, 17, 17, 17, 14,\r\n    /* 234 */ 8, 4, 17, 17, 17, 17, 17, 14,\r\n    /* 235 */ 4, 10, 0, 17, 17, 17, 17, 14,\r\n    /* 236 */ 10, 0, 17, 17, 17, 17, 17, 14,\r\n    /* 237 */ 8, 4, 17, 10, 4, 4, 4, 4,\r\n    /* 238 */ 3, 2, 14, 18, 18, 14, 2, 7,\r\n    /* 239 */ 0, 12, 18, 18, 14, 18, 18, 13,\r\n    /* 240 */ 2, 4, 0, 14, 16, 30, 17, 30,\r\n    /* 241 */ 8, 4, 0, 14, 16, 30, 17, 30,\r\n    /* 242 */ 4, 10, 0, 14, 16, 30, 17, 30,\r\n    /* 243 */ 22, 9, 0, 14, 16, 30, 17, 30,\r\n    /* 244 */ 0, 10, 0, 14, 16, 30, 17, 30,\r\n    /* 245 */ 4, 10, 4, 14, 16, 30, 17, 30,\r\n    /* 246 */ 0, 0, 11, 20, 30, 5, 21, 10,\r\n    /* 247 */ 0, 0, 14, 1, 17, 14, 4, 6,\r\n    /* 248 */ 2, 4, 0, 14, 17, 31, 1, 14,\r\n    /* 249 */ 8, 4, 0, 14, 17, 31, 1, 14,\r\n    /* 250 */ 4, 10, 0, 14, 17, 31, 1, 14,\r\n    /* 251 */ 0, 10, 0, 14, 17, 31, 1, 14,\r\n    /* 252 */ 2, 4, 0, 4, 6, 4, 4, 14,\r\n    /* 253 */ 8, 4, 0, 4, 6, 4, 4, 14,\r\n    /* 254 */ 4, 10, 0, 4, 6, 4, 4, 14,\r\n    /* 255 */ 0, 10, 0, 4, 6, 4, 4, 14,\r\n    /* 256 */ 0, 5, 2, 5, 8, 30, 17, 14,\r\n    /* 257 */ 22, 9, 0, 13, 19, 17, 17, 17,\r\n    /* 258 */ 2, 4, 0, 14, 17, 17, 17, 14,\r\n    /* 259 */ 8, 4, 0, 14, 17, 17, 17, 14,\r\n    /* 260 */ 0, 4, 10, 0, 14, 17, 17, 14,\r\n    /* 261 */ 0, 22, 9, 0, 14, 17, 17, 14,\r\n    /* 262 */ 0, 10, 0, 14, 17, 17, 17, 14,\r\n    /* 263 */ 0, 0, 4, 0, 31, 0, 4, 0,\r\n    /* 264 */ 0, 8, 4, 14, 21, 14, 4, 2,\r\n    /* 265 */ 2, 4, 0, 17, 17, 17, 25, 22,\r\n    /* 266 */ 8, 4, 0, 17, 17, 17, 25, 22,\r\n    /* 267 */ 4, 10, 0, 17, 17, 17, 25, 22,\r\n    /* 268 */ 0, 10, 0, 17, 17, 17, 25, 22,\r\n    /* 269 */ 0, 8, 4, 17, 17, 30, 16, 14,\r\n    /* 270 */ 0, 6, 4, 12, 20, 12, 4, 14,\r\n    /* 271 */ 0, 10, 0, 17, 17, 30, 16, 14,\r\n]);\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { customElement, html, LitElement, property } from 'lit-element';\r\nlet NeoPixelElement = class NeoPixelElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.r = 0;\r\n        this.g = 0;\r\n        this.b = 0;\r\n    }\r\n    render() {\r\n        const { r, g, b } = this;\r\n        const spotOpacity = (value) => (value > 0.001 ? 0.7 + value * 0.3 : 0);\r\n        const maxOpacity = Math.max(r, g, b);\r\n        const minOpacity = Math.min(r, g, b);\r\n        const opacityDelta = maxOpacity - minOpacity;\r\n        const multiplier = Math.max(1, 2 - opacityDelta * 20);\r\n        const glowBase = 0.1 + Math.max(maxOpacity * 2 - opacityDelta * 5, 0);\r\n        const glowColor = (value) => (value > 0.005 ? 0.1 + value * 0.9 : 0);\r\n        const glowOpacity = (value) => (value > 0.005 ? glowBase + value * (1 - glowBase) : 0);\r\n        const cssVal = (value) => maxOpacity ? Math.floor(Math.min(glowColor(value / maxOpacity) * multiplier, 1) * 255) : 255;\r\n        const cssColor = `rgb(${cssVal(r)}, ${cssVal(g)}, ${cssVal(b)})`;\r\n        const bkgWhite = 242 -\r\n            (maxOpacity > 0.1 && opacityDelta < 0.2\r\n                ? Math.floor(maxOpacity * 50 * (1 - opacityDelta / 0.2))\r\n                : 0);\r\n        const background = `rgb(${bkgWhite}, ${bkgWhite}, ${bkgWhite})`;\r\n        return html `\r\n      <svg\r\n        width=\"5.6631mm\"\r\n        height=\"5mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 5.6631 5\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <filter id=\"light1\" x=\"-0.8\" y=\"-0.8\" height=\"2.8\" width=\"2.8\">\r\n          <feGaussianBlur stdDeviation=\"${Math.max(0.1, maxOpacity)}\" />\r\n        </filter>\r\n        <filter id=\"light2\" x=\"-0.8\" y=\"-0.8\" height=\"2.2\" width=\"2.8\">\r\n          <feGaussianBlur stdDeviation=\"0.5\" />\r\n        </filter>\r\n        <rect x=\".33308\" y=\"0\" width=\"5\" height=\"5\" fill=\"${background}\" />\r\n        <rect x=\".016709\" y=\".4279\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <rect x=\"0\" y=\"3.6518\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <rect x=\"5.312\" y=\"3.6351\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <rect x=\"5.312\" y=\".3945\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <circle cx=\"2.8331\" cy=\"2.5\" r=\"2.1\" fill=\"#ddd\" />\r\n        <circle cx=\"2.8331\" cy=\"2.5\" r=\"1.7325\" fill=\"#e6e6e6\" />\r\n        <g fill=\"#bfbfbf\">\r\n          <path\r\n            d=\"m4.3488 3.3308s-0.0889-0.087-0.0889-0.1341c0-0.047-6e-3 -1.1533-6e-3 -1.1533s-0.0591-0.1772-0.2008-0.1772c-0.14174 0-0.81501 0.012-0.81501 0.012s-0.24805 0.024-0.23624 0.3071c0.0118 0.2835 0.032 2.0345 0.032 2.0345 0.54707-0.046 1.0487-0.3494 1.3146-0.8888z\"\r\n          />\r\n          <path\r\n            d=\"m4.34 1.6405h-1.0805s-0.24325 0.019-0.26204-0.2423l6e-3 -0.6241c0.57782 0.075 1.0332 0.3696 1.3366 0.8706z\"\r\n          />\r\n          <path\r\n            d=\"m2.7778 2.6103-0.17127 0.124-0.8091-0.012c-0.17122-0.019-0.17062-0.2078-0.17062-0.2078-1e-3 -0.3746 1e-3 -0.2831-9e-3 -0.8122l-0.31248-0.018s0.43453-0.9216 1.4786-0.9174c-1.1e-4 0.6144-4e-3 1.2289-6e-3 1.8434z\"\r\n          />\r\n          <path\r\n            d=\"m2.7808 3.0828-0.0915-0.095h-0.96857l-0.0915 0.1447-3e-3 0.1127c0 0.065-0.12108 0.08-0.12108 0.08h-0.20909c0.55906 0.9376 1.4867 0.9155 1.4867 0.9155 1e-3 -0.3845-2e-3 -0.7692-2e-3 -1.1537z\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"m4.053 1.8619c-0.14174 0-0.81494 0.013-0.81494 0.013s-0.24797 0.024-0.23616 0.3084c3e-3 0.077 5e-3 0.3235 9e-3 0.5514h1.247c-2e-3 -0.33-4e-3 -0.6942-4e-3 -0.6942s-0.0593-0.1781-0.20102-0.1781z\"\r\n          fill=\"#666\"\r\n        />\r\n        <ellipse\r\n          cx=\"2.5\"\r\n          cy=\"2.3\"\r\n          rx=\"0.3\"\r\n          ry=\"0.3\"\r\n          fill=\"red\"\r\n          opacity=${spotOpacity(r)}\r\n          filter=\"url(#light1)\"\r\n        ></ellipse>\r\n        <ellipse\r\n          cx=\"3.5\"\r\n          cy=\"3.2\"\r\n          rx=\"0.3\"\r\n          ry=\"0.3\"\r\n          fill=\"green\"\r\n          opacity=${spotOpacity(g)}\r\n          filter=\"url(#light1)\"\r\n        ></ellipse>\r\n        <ellipse\r\n          cx=\"3.3\"\r\n          cy=\"1.45\"\r\n          rx=\"0.3\"\r\n          ry=\"0.3\"\r\n          fill=\"blue\"\r\n          opacity=${spotOpacity(b)}\r\n          filter=\"url(#light1)\"\r\n        ></ellipse>\r\n        <ellipse\r\n          cx=\"3\"\r\n          cy=\"2.5\"\r\n          rx=\"2.2\"\r\n          ry=\"2.2\"\r\n          opacity=\"${glowOpacity(maxOpacity)}\"\r\n          fill=\"${cssColor}\"\r\n          filter=\"url(#light2)\"\r\n        ></ellipse>\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], NeoPixelElement.prototype, \"r\", void 0);\r\n__decorate([\r\n    property()\r\n], NeoPixelElement.prototype, \"g\", void 0);\r\n__decorate([\r\n    property()\r\n], NeoPixelElement.prototype, \"b\", void 0);\r\nNeoPixelElement = __decorate([\r\n    customElement('wokwi-neopixel')\r\n], NeoPixelElement);\r\nexport { NeoPixelElement };\r\n","export { LEDElement } from './led-element';\r\nexport { PushbuttonElement } from './pushbutton-element';\r\nexport { ResistorElement } from './resistor-element';\r\nexport { SevenSegmentElement } from './7segment-element';\r\nexport { LCD1602Element } from './lcd1602-element';\r\nexport { fontA00 } from './lcd1602-font-a00';\r\nexport { fontA02 } from './lcd1602-font-a02';\r\nexport { NeoPixelElement } from './neopixel-element';\r\n","const url = 'https://hexi.wokwi.com';\n\nexport interface HexiResult {\n  stdout: string;\n  stderr: string;\n  hex: string;\n}\n\nexport async function buildHex(source: string) {\n  const resp = await fetch(url + '/build', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ sketch: source })\n  });\n  return (await resp.json()) as HexiResult;\n}","/**\r\n * AVR 8 CPU data structures\r\n * Part of AVR8js\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nconst registerSpace = 0x100;\r\nexport class CPU {\r\n    constructor(progMem, sramBytes = 8192) {\r\n        this.progMem = progMem;\r\n        this.sramBytes = sramBytes;\r\n        this.data = new Uint8Array(this.sramBytes + registerSpace);\r\n        this.data16 = new Uint16Array(this.data.buffer);\r\n        this.dataView = new DataView(this.data.buffer);\r\n        this.progBytes = new Uint8Array(this.progMem.buffer);\r\n        this.writeHooks = [];\r\n        this.pc = 0;\r\n        this.cycles = 0;\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.data.fill(0);\r\n        this.SP = this.data.length - 1;\r\n    }\r\n    readData(addr) {\r\n        return this.data[addr];\r\n    }\r\n    writeData(addr, value) {\r\n        const hook = this.writeHooks[addr];\r\n        if (hook) {\r\n            if (hook(value, this.data[addr], addr)) {\r\n                return;\r\n            }\r\n        }\r\n        this.data[addr] = value;\r\n    }\r\n    get SP() {\r\n        return this.dataView.getUint16(93, true);\r\n    }\r\n    set SP(value) {\r\n        this.dataView.setUint16(93, value, true);\r\n    }\r\n    get SREG() {\r\n        return this.data[95];\r\n    }\r\n    get interruptsEnabled() {\r\n        return this.SREG & 0x80 ? true : false;\r\n    }\r\n}\r\n","/**\r\n * AVR-8 Instruction Simulation\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nfunction isTwoWordInstruction(opcode) {\r\n    return (\r\n    /* LDS */\r\n    (opcode & 0xfe0f) === 0x9000 ||\r\n        /* STS */\r\n        (opcode & 0xfe0f) === 0x9200 ||\r\n        /* CALL */\r\n        (opcode & 0xfe0e) === 0x940e ||\r\n        /* JMP */\r\n        (opcode & 0xfe0e) === 0x940c);\r\n}\r\nexport function avrInstruction(cpu) {\r\n    const opcode = cpu.progMem[cpu.pc];\r\n    if ((opcode & 0xfc00) === 0x1c00) {\r\n        /* ADC, 0001 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const sum = d + r + (cpu.data[95] & 1);\r\n        const R = sum & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (d ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= sum & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xc00) {\r\n        /* ADD, 0000 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = (d + r) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (R ^ d) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= (d + r) & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9600) {\r\n        /* ADIW, 1001 0110 KKdd KKKK */\r\n        const addr = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const value = cpu.dataView.getUint16(addr, true);\r\n        const R = (value + ((opcode & 0xf) | ((opcode & 0xc0) >> 2))) & 0xffff;\r\n        cpu.dataView.setUint16(addr, R, true);\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= ~value & R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= ~R & value & 0x8000 ? 1 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2000) {\r\n        /* AND, 0010 00rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] & cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x7000) {\r\n        /* ANDI, 0111 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] & ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9405) {\r\n        /* ASR, 1001 010d dddd 0101 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = (value >>> 1) | (128 & value);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9488) {\r\n        /* BCLR, 1001 0100 1sss 1000 */\r\n        cpu.data[95] &= ~(1 << ((opcode & 0x70) >> 4));\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xf800) {\r\n        /* BLD, 1111 100d dddd 0bbb */\r\n        const b = opcode & 7;\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        cpu.data[d] = (~(1 << b) & cpu.data[d]) | (((cpu.data[95] >> 6) & 1) << b);\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf400) {\r\n        /* BRBC, 1111 01kk kkkk ksss */\r\n        if (!(cpu.data[95] & (1 << (opcode & 7)))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf000) {\r\n        /* BRBS, 1111 00kk kkkk ksss */\r\n        if (cpu.data[95] & (1 << (opcode & 7))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9408) {\r\n        /* BSET, 1001 0100 0sss 1000 */\r\n        cpu.data[95] |= 1 << ((opcode & 0x70) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfa00) {\r\n        /* BST, 1111 101d dddd 0bbb */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const b = opcode & 7;\r\n        cpu.data[95] = (cpu.data[95] & 0xbf) | ((d >> b) & 1 ? 0x40 : 0);\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940e) {\r\n        /* CALL, 1001 010k kkkk 111k kkkk kkkk kkkk kkkk */\r\n        const k = cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13);\r\n        const ret = cpu.pc + 2;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        cpu.data[sp] = 255 & ret;\r\n        cpu.data[sp - 1] = (ret >> 8) & 255;\r\n        cpu.dataView.setUint16(93, sp - 2, true);\r\n        cpu.pc = k - 1;\r\n        cpu.cycles += 4;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9800) {\r\n        /* CBI, 1001 1000 AAAA Abbb */\r\n        const A = opcode & 0xf8;\r\n        const b = opcode & 7;\r\n        const R = cpu.readData((A >> 3) + 32);\r\n        cpu.writeData((A >> 3) + 32, R & ~(1 << b));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9400) {\r\n        /* COM, 1001 010d dddd 0000 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const R = 255 - cpu.data[d];\r\n        cpu.data[d] = R;\r\n        let sreg = (cpu.data[95] & 0xe1) | 1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1400) {\r\n        /* CP, 0001 01rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 0 !== ((val1 ^ val2) & (val1 ^ R) & 128) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x400) {\r\n        /* CPC, 0000 01rd dddd rrrr */\r\n        const arg1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const arg2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const r = arg1 - arg2 - (sreg & 1);\r\n        sreg = (sreg & 0xc0) | (!r && (sreg >> 1) & 1 ? 2 : 0) | (arg2 + (sreg & 1) > arg1 ? 1 : 0);\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x3000) {\r\n        /* CPI, 0011 KKKK dddd KKKK */\r\n        const arg1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const arg2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const r = arg1 - arg2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= arg2 > arg1 ? 1 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1000) {\r\n        /* CPSE, 0001 00rd dddd rrrr */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] === cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)]) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.pc += skipSize;\r\n            cpu.cycles += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x940a) {\r\n        /* DEC, 1001 010d dddd 1010 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value - 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === value ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2400) {\r\n        /* EOR, 0010 01rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] ^ cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x308) {\r\n        /* FMUL, 0000 0011 0ddd 1rrr */\r\n        const v1 = cpu.data[((opcode & 0x70) >> 4) + 16];\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x380) {\r\n        /* FMULS, 0000 0011 1ddd 0rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.dataView.getInt8((opcode & 7) + 16);\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x388) {\r\n        /* FMULSU, 0000 0011 1ddd 1rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 2 : 0) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x9509) {\r\n        /* ICALL, 1001 0101 0000 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        cpu.dataView.setUint16(93, sp - 2, true);\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles += 2;\r\n    }\r\n    else if (opcode === 0x9409) {\r\n        /* IJMP, 1001 0100 0000 1001 */\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb000) {\r\n        /* IN, 1011 0AAd dddd AAAA */\r\n        const i = cpu.readData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = i;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9403) {\r\n        /* INC, 1001 010d dddd 0011 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d + 1) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 127 === d ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940c) {\r\n        /* JMP, 1001 010k kkkk 110k kkkk kkkk kkkk kkkk */\r\n        cpu.pc = (cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13)) - 1;\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9206) {\r\n        /* LAC, 1001 001r rrrr 0110 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const clear = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value & (255 - clear));\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9205) {\r\n        /* LAS, 1001 001r rrrr 0101 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const set = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value | set);\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9207) {\r\n        /* LAT, 1001 001r rrrr 0111 */\r\n        const r = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), r ^ R);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xe000) {\r\n        /* LDI, 1110 KKKK dddd KKKK */\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9000) {\r\n        /* LDS, 1001 000d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        const value = cpu.readData(cpu.progMem[cpu.pc + 1]);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = value;\r\n        cpu.pc++;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900c) {\r\n        /* LDX, 1001 000d dddd 1100 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(26, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900d) {\r\n        /* LDX(INC), 1001 000d dddd 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900e) {\r\n        /* LDX(DEC), 1001 000d dddd 1110 */\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8008) {\r\n        /* LDY, 1000 000d dddd 1000 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9009) {\r\n        /* LDY(INC), 1001 000d dddd 1001 */\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900a) {\r\n        /* LDY(DEC), 1001 000d dddd 1010 */\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8008 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDY, 10q0 qq0d dddd 1qqq */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8000) {\r\n        /* LDZ, 1000 000d dddd 0000 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9001) {\r\n        /* LDZ(INC), 1001 000d dddd 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9002) {\r\n        /* LDZ(DEC), 1001 000d dddd 0010 */\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8000 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDZ, 10q0 qq0d dddd 0qqq */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n        cpu.cycles += 2;\r\n    }\r\n    else if (opcode === 0x95c8) {\r\n        /* LPM, 1001 0101 1100 1000 */\r\n        cpu.data[0] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9004) {\r\n        /* LPM(REG), 1001 000d dddd 0100 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9005) {\r\n        /* LPM(INC), 1001 000d dddd 0101 */\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9406) {\r\n        /* LSR, 1001 010d dddd 0110 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value >>> 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2c00) {\r\n        /* MOV, 0010 11rd dddd rrrr */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n    }\r\n    else if ((opcode & 0xff00) === 0x100) {\r\n        /* MOVW, 0000 0001 dddd rrrr */\r\n        const r2 = 2 * (opcode & 0xf);\r\n        const d2 = 2 * ((opcode & 0xf0) >> 4);\r\n        cpu.data[d2] = cpu.data[r2];\r\n        cpu.data[d2 + 1] = cpu.data[r2 + 1];\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x9c00) {\r\n        /* MUL, 1001 11rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] * cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x200) {\r\n        /* MULS, 0000 0010 dddd rrrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0xf0) >> 4) + 16) * cpu.dataView.getInt8((opcode & 0xf) + 16);\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x300) {\r\n        /* MULSU, 0000 0011 0ddd 0rrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16) * cpu.data[(opcode & 7) + 16];\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9401) {\r\n        /* NEG, 1001 010d dddd 0001 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const value = cpu.data[d];\r\n        const R = 0 - value;\r\n        cpu.data[d] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === R ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= R ? 1 : 0;\r\n        sreg |= 1 & (R | value) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0) {\r\n        /* NOP, 0000 0000 0000 0000 */\r\n        /* NOP */\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2800) {\r\n        /* OR, 0010 10rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] | cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x6000) {\r\n        /* SBR, 0110 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] | ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb800) {\r\n        /* OUT, 1011 1AAr rrrr AAAA */\r\n        cpu.writeData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32, cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900f) {\r\n        /* POP, 1001 000d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true) + 1;\r\n        cpu.dataView.setUint16(93, value, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[value];\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920f) {\r\n        /* PUSH, 1001 001d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true);\r\n        cpu.data[value] = cpu.data[(opcode & 0x1f0) >> 4];\r\n        cpu.dataView.setUint16(93, value - 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xd000) {\r\n        /* RCALL, 1101 kkkk kkkk kkkk */\r\n        const k = (opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0);\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        cpu.data[sp] = 255 & retAddr;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        cpu.dataView.setUint16(93, sp - 2, true);\r\n        cpu.pc += k;\r\n        cpu.cycles += 3;\r\n    }\r\n    else if (opcode === 0x9508) {\r\n        /* RET, 1001 0101 0000 1000 */\r\n        const i = cpu.dataView.getUint16(93, true) + 2;\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        cpu.cycles += 4;\r\n    }\r\n    else if (opcode === 0x9518) {\r\n        /* RETI, 1001 0101 0001 1000 */\r\n        const i = cpu.dataView.getUint16(93, true) + 2;\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        cpu.cycles += 4;\r\n        cpu.data[95] |= 0x80; // Enable interrupts\r\n    }\r\n    else if ((opcode & 0xf000) === 0xc000) {\r\n        /* RJMP, 1100 kkkk kkkk kkkk */\r\n        cpu.pc = cpu.pc + ((opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9407) {\r\n        /* ROR, 1001 010d dddd 0111 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d >>> 1) | ((cpu.data[95] & 1) << 7);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 1 & d ? 1 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x800) {\r\n        /* SBC, 0000 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x4000) {\r\n        /* SBCI, 0100 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9a00) {\r\n        /* SBI, 1001 1010 AAAA Abbb */\r\n        const target = ((opcode & 0xf8) >> 3) + 32;\r\n        cpu.writeData(target, cpu.readData(target) | (1 << (opcode & 7)));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9900) {\r\n        /* SBIC, 1001 1001 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (!(value & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9b00) {\r\n        /* SBIS, 1001 1011 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (value & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9700) {\r\n        /* SBIW, 1001 0111 KKdd KKKK */\r\n        const i = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const a = cpu.dataView.getUint16(i, true);\r\n        const l = (opcode & 0xf) | ((opcode & 0xc0) >> 2);\r\n        const R = a - l;\r\n        cpu.dataView.setUint16(i, R, true);\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= a & ~R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= l > a ? 1 : 0;\r\n        sreg |= 1 & ((~a & l) | (l & R) | (R & ~a)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfc00) {\r\n        /* SBRC, 1111 110r rrrr 0bbb */\r\n        if (!(cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfe00) {\r\n        /* SBRS, 1111 111r rrrr 0bbb */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if (opcode === 0x9588) {\r\n        /* SLEEP, 1001 0101 1000 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95e8) {\r\n        /* SPM, 1001 0101 1110 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95f8) {\r\n        /* SPM(INC), 1001 0101 1111 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9200) {\r\n        /* STS, 1001 001d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const addr = cpu.progMem[cpu.pc + 1];\r\n        cpu.writeData(addr, value);\r\n        cpu.pc++;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920c) {\r\n        /* STX, 1001 001r rrrr 1100 */\r\n        cpu.writeData(cpu.dataView.getUint16(26, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920d) {\r\n        /* STX(INC), 1001 001r rrrr 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.writeData(x, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920e) {\r\n        /* STX(DEC), 1001 001r rrrr 1110 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.writeData(x, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8208) {\r\n        /* STY, 1000 001r rrrr 1000 */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9209) {\r\n        /* STY(INC), 1001 001r rrrr 1001 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.writeData(y, i);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920a) {\r\n        /* STY(DEC), 1001 001r rrrr 1010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.writeData(y, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8208 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDY, 10q0 qq1r rrrr 1qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8200) {\r\n        /* STZ, 1000 001r rrrr 0000 */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9201) {\r\n        /* STZ(INC), 1001 001r rrrr 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.writeData(z, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9202) {\r\n        /* STZ(DEC), 1001 001r rrrr 0010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.writeData(z, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8200 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDZ, 10q0 qq1r rrrr 0qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1800) {\r\n        /* SUB, 0001 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x5000) {\r\n        /* SUBI, 0101 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const R = val1 - val2;\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9402) {\r\n        /* SWAP, 1001 010d dddd 0010 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const i = cpu.data[d];\r\n        cpu.data[d] = ((15 & i) << 4) | ((240 & i) >>> 4);\r\n    }\r\n    else if (opcode === 0x95a8) {\r\n        /* WDR, 1001 0101 1010 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9204) {\r\n        /* XCH, 1001 001r rrrr 0100 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const val1 = cpu.data[r];\r\n        const val2 = cpu.data[cpu.dataView.getUint16(30, true)];\r\n        cpu.data[cpu.dataView.getUint16(30, true)] = val1;\r\n        cpu.data[r] = val2;\r\n    }\r\n    cpu.pc = (cpu.pc + 1) % cpu.progMem.length;\r\n    cpu.cycles++;\r\n}\r\n","/**\r\n * AVR-8 Interrupt Handling\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nexport function avrInterrupt(cpu, addr) {\r\n    const sp = cpu.dataView.getUint16(93, true);\r\n    cpu.data[sp] = cpu.pc & 0xff;\r\n    cpu.data[sp - 1] = (cpu.pc >> 8) & 0xff;\r\n    cpu.dataView.setUint16(93, sp - 2, true);\r\n    cpu.data[95] &= 0x7f; // clear global interrupt flag\r\n    cpu.cycles += 2;\r\n    cpu.pc = addr;\r\n}\r\n","/**\r\n * AVR-8 Timers\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nimport { avrInterrupt } from '../cpu/interrupt';\r\nconst timer01Dividers = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 8,\r\n    3: 64,\r\n    4: 256,\r\n    5: 1024,\r\n    6: 0,\r\n    7: 0 // TODO: External clock source on T0 pin. Clock on rising edge.\r\n};\r\nconst WGM_NORMAL = 0;\r\nconst WGM_PWM_PHASE_CORRECT = 1;\r\nconst WGM_CTC = 2;\r\nconst WGM_FASTPWM = 3;\r\nconst TOV = 1;\r\nconst OCFA = 2;\r\nconst OCFB = 4;\r\nconst TOIE = 1;\r\nconst OCIEA = 2;\r\nconst OCIEB = 4;\r\nexport const timer0Config = {\r\n    bits: 8,\r\n    captureInterrupt: 0,\r\n    compAInterrupt: 0x1c,\r\n    compBInterrupt: 0x1e,\r\n    ovfInterrupt: 0x20,\r\n    TIFR: 0x35,\r\n    OCRA: 0x47,\r\n    OCRB: 0x48,\r\n    ICR: 0,\r\n    TCNT: 0x46,\r\n    TCCRA: 0x44,\r\n    TCCRB: 0x45,\r\n    TCCRC: 0,\r\n    TIMSK: 0x6e,\r\n    dividers: timer01Dividers\r\n};\r\nexport const timer1Config = {\r\n    bits: 16,\r\n    captureInterrupt: 0x14,\r\n    compAInterrupt: 0x16,\r\n    compBInterrupt: 0x18,\r\n    ovfInterrupt: 0x1a,\r\n    TIFR: 0x36,\r\n    OCRA: 0x88,\r\n    OCRB: 0x8a,\r\n    ICR: 0x86,\r\n    TCNT: 0x84,\r\n    TCCRA: 0x80,\r\n    TCCRB: 0x81,\r\n    TCCRC: 0x82,\r\n    TIMSK: 0x6f,\r\n    dividers: timer01Dividers\r\n};\r\nexport const timer2Config = {\r\n    bits: 8,\r\n    captureInterrupt: 0,\r\n    compAInterrupt: 0x0e,\r\n    compBInterrupt: 0x10,\r\n    ovfInterrupt: 0x12,\r\n    TIFR: 0x37,\r\n    OCRA: 0xb3,\r\n    OCRB: 0xb4,\r\n    ICR: 0,\r\n    TCNT: 0xb2,\r\n    TCCRA: 0xb0,\r\n    TCCRB: 0xb1,\r\n    TCCRC: 0,\r\n    TIMSK: 0x70,\r\n    dividers: {\r\n        0: 1,\r\n        1: 1,\r\n        2: 8,\r\n        3: 32,\r\n        4: 64,\r\n        5: 128,\r\n        6: 256,\r\n        7: 1024\r\n    }\r\n};\r\nexport class AVRTimer {\r\n    constructor(cpu, config) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.mask = (1 << this.config.bits) - 1;\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.ocrB = 0;\r\n        cpu.writeHooks[config.TCNT] = (value) => {\r\n            this.TCNT = value;\r\n            this.timerUpdated(value);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[config.OCRA] = (value) => {\r\n            // TODO implement buffering when timer running in PWM mode\r\n            this.ocrA = value;\r\n        };\r\n        cpu.writeHooks[config.OCRB] = (value) => {\r\n            this.ocrB = value;\r\n        };\r\n    }\r\n    reset() {\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.ocrB = 0;\r\n    }\r\n    get TIFR() {\r\n        return this.cpu.data[this.config.TIFR];\r\n    }\r\n    set TIFR(value) {\r\n        this.cpu.data[this.config.TIFR] = value;\r\n    }\r\n    get TCNT() {\r\n        return this.cpu.data[this.config.TCNT];\r\n    }\r\n    set TCNT(value) {\r\n        this.cpu.data[this.config.TCNT] = value;\r\n    }\r\n    get TCCRA() {\r\n        return this.cpu.data[this.config.TCCRA];\r\n    }\r\n    get TCCRB() {\r\n        return this.cpu.data[this.config.TCCRB];\r\n    }\r\n    get TIMSK() {\r\n        return this.cpu.data[this.config.TIMSK];\r\n    }\r\n    get CS() {\r\n        return (this.TCCRB & 0x7);\r\n    }\r\n    get WGM() {\r\n        return ((this.TCCRB & 0x8) >> 1) | (this.TCCRA & 0x3);\r\n    }\r\n    tick() {\r\n        const divider = this.config.dividers[this.CS];\r\n        const delta = this.cpu.cycles - this.lastCycle;\r\n        if (divider && delta >= divider) {\r\n            const counterDelta = Math.floor(delta / divider);\r\n            this.lastCycle += counterDelta * divider;\r\n            const val = this.TCNT;\r\n            const newVal = (val + counterDelta) & this.mask;\r\n            this.TCNT = newVal;\r\n            this.timerUpdated(newVal);\r\n            if ((this.WGM === WGM_NORMAL ||\r\n                this.WGM === WGM_PWM_PHASE_CORRECT ||\r\n                this.WGM === WGM_FASTPWM) &&\r\n                val > newVal) {\r\n                this.TIFR |= TOV;\r\n            }\r\n        }\r\n        if (this.cpu.interruptsEnabled) {\r\n            if (this.TIFR & TOV && this.TIMSK & TOIE) {\r\n                avrInterrupt(this.cpu, this.config.ovfInterrupt);\r\n                this.TIFR &= ~TOV;\r\n            }\r\n            if (this.TIFR & OCFA && this.TIMSK & OCIEA) {\r\n                avrInterrupt(this.cpu, this.config.compAInterrupt);\r\n                this.TIFR &= ~OCFA;\r\n            }\r\n            if (this.TIFR & OCFB && this.TIMSK & OCIEB) {\r\n                avrInterrupt(this.cpu, this.config.compBInterrupt);\r\n                this.TIFR &= ~OCFB;\r\n            }\r\n        }\r\n    }\r\n    timerUpdated(value) {\r\n        if (this.ocrA && value === this.ocrA) {\r\n            this.TIFR |= OCFA;\r\n            if (this.WGM === WGM_CTC) {\r\n                // Clear Timer on Compare Match (CTC) Mode\r\n                this.TCNT = 0;\r\n                this.TIFR |= TOV;\r\n            }\r\n        }\r\n        if (this.ocrB && value === this.ocrB) {\r\n            this.TIFR |= OCFB;\r\n        }\r\n    }\r\n}\r\n","export const portAConfig = {\r\n    PIN: 0x20,\r\n    DDR: 0x21,\r\n    PORT: 0x22\r\n};\r\nexport const portBConfig = {\r\n    PIN: 0x23,\r\n    DDR: 0x24,\r\n    PORT: 0x25\r\n};\r\nexport const portCConfig = {\r\n    PIN: 0x26,\r\n    DDR: 0x27,\r\n    PORT: 0x28\r\n};\r\nexport const portDConfig = {\r\n    PIN: 0x29,\r\n    DDR: 0x2a,\r\n    PORT: 0x2b\r\n};\r\nexport const portEConfig = {\r\n    PIN: 0x2c,\r\n    DDR: 0x2d,\r\n    PORT: 0x2e\r\n};\r\nexport const portFConfig = {\r\n    PIN: 0x2f,\r\n    DDR: 0x30,\r\n    PORT: 0x31\r\n};\r\nexport const portGConfig = {\r\n    PIN: 0x32,\r\n    DDR: 0x33,\r\n    PORT: 0x34\r\n};\r\nexport const portHConfig = {\r\n    PIN: 0x100,\r\n    DDR: 0x101,\r\n    PORT: 0x102\r\n};\r\nexport const portJConfig = {\r\n    PIN: 0x103,\r\n    DDR: 0x104,\r\n    PORT: 0x105\r\n};\r\nexport const portKConfig = {\r\n    PIN: 0x106,\r\n    DDR: 0x107,\r\n    PORT: 0x108\r\n};\r\nexport const portLConfig = {\r\n    PIN: 0x109,\r\n    DDR: 0x10a,\r\n    PORT: 0x10b\r\n};\r\nexport var PinState;\r\n(function (PinState) {\r\n    PinState[PinState[\"Low\"] = 0] = \"Low\";\r\n    PinState[PinState[\"High\"] = 1] = \"High\";\r\n    PinState[PinState[\"Input\"] = 2] = \"Input\";\r\n    PinState[PinState[\"InputPullUp\"] = 3] = \"InputPullUp\";\r\n})(PinState || (PinState = {}));\r\nexport class AVRIOPort {\r\n    constructor(cpu, portConfig) {\r\n        this.cpu = cpu;\r\n        this.portConfig = portConfig;\r\n        this.listeners = [];\r\n        cpu.writeHooks[portConfig.DDR] = (value, oldValue) => {\r\n            const portValue = cpu.data[portConfig.PORT];\r\n            this.writeGpio(value & portValue, oldValue & oldValue);\r\n        };\r\n        cpu.writeHooks[portConfig.PORT] = (value, oldValue) => {\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            cpu.data[portConfig.PORT] = value;\r\n            value &= ddrMask;\r\n            cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | value;\r\n            this.writeGpio(value, oldValue & ddrMask);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[portConfig.PIN] = (value) => {\r\n            // Writing to 1 PIN toggles PORT bits\r\n            const oldPortValue = cpu.data[portConfig.PORT];\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            const portValue = oldPortValue ^ value;\r\n            cpu.data[portConfig.PORT] = portValue;\r\n            cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | (portValue & ddrMask);\r\n            this.writeGpio(portValue & ddrMask, oldPortValue & ddrMask);\r\n            return true;\r\n        };\r\n    }\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    removeListener(listener) {\r\n        this.listeners = this.listeners.filter((l) => l !== listener);\r\n    }\r\n    /**\r\n     * Get the state of a given GPIO pin\r\n     *\r\n     * @param index Pin index to return from 0 to 7\r\n     * @returns PinState.Low or PinState.High if the pin is set to output, PinState.Input if the pin is set\r\n     *   to input, and PinState.InputPullUp if the pin is set to input and the internal pull-up resistor has\r\n     *   been enabled.\r\n     */\r\n    pinState(index) {\r\n        const ddr = this.cpu.data[this.portConfig.DDR];\r\n        const port = this.cpu.data[this.portConfig.PORT];\r\n        const bitMask = 1 << index;\r\n        if (ddr & bitMask) {\r\n            return port & bitMask ? PinState.High : PinState.Low;\r\n        }\r\n        else {\r\n            return port & bitMask ? PinState.InputPullUp : PinState.Input;\r\n        }\r\n    }\r\n    writeGpio(value, oldValue) {\r\n        for (const listener of this.listeners) {\r\n            listener(value, oldValue);\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\nexport const usart0Config = {\r\n    rxCompleteInterrupt: 0x24,\r\n    dataRegisterEmptyInterrupt: 0x26,\r\n    txCompleteInterrupt: 0x28,\r\n    UCSRA: 0xc0,\r\n    UCSRB: 0xc1,\r\n    UCSRC: 0xc2,\r\n    UBRRL: 0xc4,\r\n    UBRRH: 0xc5,\r\n    UDR: 0xc6\r\n};\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst UCSRA_RXC = 0x80; // USART Receive Complete\r\nconst UCSRA_TXC = 0x40; // USART Transmit Complete\r\nconst UCSRA_UDRE = 0x20; // USART Data Register Empty\r\nconst UCSRA_FE = 0x10; // Frame Error\r\nconst UCSRA_DOR = 0x8; // Data OverRun\r\nconst UCSRA_UPE = 0x4; // USART Parity Error\r\nconst UCSRA_U2X = 0x2; // Double the USART Transmission Speed\r\nconst UCSRA_MPCM = 0x1; // Multi-processor Communication Mode\r\nconst UCSRB_RXCIE = 0x80; // RX Complete Interrupt Enable\r\nconst UCSRB_TXCIE = 0x40; // TX Complete Interrupt Enable\r\nconst UCSRB_UDRIE = 0x20; // USART Data Register Empty Interrupt Enable\r\nconst UCSRB_RXEN = 0x10; // Receiver Enable\r\nconst UCSRB_TXEN = 0x8; // Transmitter Enable\r\nconst UCSRB_UCSZ2 = 0x4; // Character Size 2\r\nconst UCSRB_RXB8 = 0x2; // Receive Data Bit 8\r\nconst UCSRB_TXB8 = 0x1; // Transmit Data Bit 8\r\nconst UCSRC_UMSEL1 = 0x80; // USART Mode Select 1\r\nconst UCSRC_UMSEL0 = 0x40; // USART Mode Select 0\r\nconst UCSRC_UPM1 = 0x20; // Parity Mode 1\r\nconst UCSRC_UPM0 = 0x10; // Parity Mode 0\r\nconst UCSRC_USBS = 0x8; // Stop Bit Select\r\nconst UCSRC_UCSZ1 = 0x4; // Character Size 1\r\nconst UCSRC_UCSZ0 = 0x2; // Character Size 0\r\nconst UCSRC_UCPOL = 0x1; // Clock Polarity\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport class AVRUSART {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.onByteTransmit = null;\r\n        this.onLineTransmit = null;\r\n        this.lineBuffer = '';\r\n        this.cpu.writeHooks[config.UCSRA] = (value) => {\r\n            this.cpu.data[config.UCSRA] = value | UCSRA_UDRE | UCSRA_TXC;\r\n            return true;\r\n        };\r\n        this.cpu.writeHooks[config.UCSRB] = (value, oldValue) => {\r\n            if (value & UCSRB_TXEN && !(oldValue & UCSRB_TXEN)) {\r\n                // Enabling the transmission - mark UDR as empty\r\n                this.cpu.data[config.UCSRA] |= UCSRA_UDRE;\r\n            }\r\n        };\r\n        this.cpu.writeHooks[config.UDR] = (value) => {\r\n            if (this.onByteTransmit) {\r\n                this.onByteTransmit(value);\r\n            }\r\n            if (this.onLineTransmit) {\r\n                const ch = String.fromCharCode(value);\r\n                if (ch === '\\n') {\r\n                    this.onLineTransmit(this.lineBuffer);\r\n                    this.lineBuffer = '';\r\n                }\r\n                else {\r\n                    this.lineBuffer += ch;\r\n                }\r\n            }\r\n            this.cpu.data[config.UCSRA] |= UCSRA_UDRE | UCSRA_TXC;\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.cpu.interruptsEnabled) {\r\n            const ucsra = this.cpu.data[this.config.UCSRA];\r\n            const ucsrb = this.cpu.data[this.config.UCSRB];\r\n            if (ucsra & UCSRA_UDRE && ucsrb & UCSRB_UDRIE) {\r\n                avrInterrupt(this.cpu, this.config.dataRegisterEmptyInterrupt);\r\n                this.cpu.data[this.config.UCSRA] &= ~UCSRA_UDRE;\r\n            }\r\n            if (ucsrb & UCSRA_TXC && ucsrb & UCSRB_TXCIE) {\r\n                avrInterrupt(this.cpu, this.config.txCompleteInterrupt);\r\n                this.cpu.data[this.config.UCSRA] &= ~UCSRA_TXC;\r\n            }\r\n        }\r\n    }\r\n    get baudRate() {\r\n        const UBRR = (this.cpu.data[this.config.UBRRH] << 8) | this.cpu.data[this.config.UBRRL];\r\n        const multiplier = this.cpu.data[this.config.UCSRA] & UCSRA_U2X ? 8 : 16;\r\n        return Math.floor(this.freqMHz / (multiplier * (1 + UBRR)));\r\n    }\r\n    get bitsPerChar() {\r\n        const ucsz = ((this.cpu.data[this.config.UCSRA] & (UCSRC_UCSZ1 | UCSRC_UCSZ0)) >> 1) |\r\n            (this.cpu.data[this.config.UCSRB] & UCSRB_UCSZ2);\r\n        switch (ucsz) {\r\n            case 0:\r\n                return 5;\r\n            case 1:\r\n                return 6;\r\n            case 2:\r\n                return 7;\r\n            case 3:\r\n                return 8;\r\n            default: // 4..6 are reserved\r\n            case 7:\r\n                return 9;\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst TWCR_TWINT = 0x80; // TWI Interrupt Flag\r\nconst TWCR_TWEA = 0x40; // TWI Enable Acknowledge Bit\r\nconst TWCR_TWSTA = 0x20; // TWI START Condition Bit\r\nconst TWCR_TWSTO = 0x10; // TWI STOP Condition Bit\r\nconst TWCR_TWWC = 0x8; //TWI Write Collision Flag\r\nconst TWCR_TWEN = 0x4; //  TWI Enable Bit\r\nconst TWCR_TWIE = 0x1; // TWI Interrupt Enable\r\nconst TWSR_TWS_MASK = 0xf8; // TWI Status\r\nconst TWSR_TWPS1 = 0x2; // TWI Prescaler Bits\r\nconst TWSR_TWPS0 = 0x1; // TWI Prescaler Bits\r\nconst TWSR_TWPS_MASK = TWSR_TWPS1 | TWSR_TWPS0; // TWI Prescaler mask\r\nconst TWAR_TWA_MASK = 0xfe; //  TWI (Slave) Address Register\r\nconst TWAR_TWGCE = 0x1; // TWI General Call Recognition Enable Bit\r\nconst STATUS_BUS_ERROR = 0x0;\r\nconst STATUS_TWI_IDLE = 0xf8;\r\n// Master states\r\nconst STATUS_START = 0x08;\r\nconst STATUS_REPEATED_START = 0x10;\r\nconst STATUS_SLAW_ACK = 0x18;\r\nconst STATUS_SLAW_NACK = 0x20;\r\nconst STATUS_DATA_SENT_ACK = 0x28;\r\nconst STATUS_DATA_SENT_NACK = 0x30;\r\nconst STATUS_DATA_LOST_ARBITRATION = 0x38;\r\nconst STATUS_SLAR_ACK = 0x40;\r\nconst STATUS_SLAR_NACK = 0x48;\r\nconst STATUS_DATA_RECEIVED_ACK = 0x50;\r\nconst STATUS_DATA_RECEIVED_NACK = 0x58;\r\n// TODO: add slave states\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport const twiConfig = {\r\n    twiInterrupt: 0x30,\r\n    TWBR: 0xb8,\r\n    TWSR: 0xb9,\r\n    TWAR: 0xba,\r\n    TWDR: 0xbb,\r\n    TWCR: 0xbc,\r\n    TWAMR: 0xbd\r\n};\r\n// A simple TWI Event Handler that sends a NACK for all events\r\nexport class NoopTWIEventHandler {\r\n    constructor(twi) {\r\n        this.twi = twi;\r\n    }\r\n    start() {\r\n        this.twi.completeStart();\r\n    }\r\n    stop() {\r\n        this.twi.completeStop();\r\n    }\r\n    connectToSlave() {\r\n        this.twi.completeConnect(false);\r\n    }\r\n    writeByte() {\r\n        this.twi.completeWrite(false);\r\n    }\r\n    readByte() {\r\n        this.twi.completeRead(0xff);\r\n    }\r\n}\r\nexport class AVRTWI {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.eventHandler = new NoopTWIEventHandler(this);\r\n        this.nextTick = null;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n        this.cpu.writeHooks[config.TWCR] = (value) => {\r\n            const clearInt = value & TWCR_TWINT;\r\n            if (clearInt) {\r\n                value &= ~TWCR_TWINT;\r\n            }\r\n            const { status } = this;\r\n            if (clearInt && value & TWCR_TWEN) {\r\n                const twdrValue = this.cpu.data[this.config.TWDR];\r\n                this.nextTick = () => {\r\n                    if (value & TWCR_TWSTA) {\r\n                        this.eventHandler.start(status !== STATUS_TWI_IDLE);\r\n                    }\r\n                    else if (value & TWCR_TWSTO) {\r\n                        this.eventHandler.stop();\r\n                    }\r\n                    else if (status === STATUS_START) {\r\n                        this.eventHandler.connectToSlave(twdrValue >> 1, twdrValue & 0x1 ? false : true);\r\n                    }\r\n                    else if (status === STATUS_SLAW_ACK || status === STATUS_DATA_SENT_ACK) {\r\n                        this.eventHandler.writeByte(twdrValue);\r\n                    }\r\n                    else if (status === STATUS_SLAR_ACK || status === STATUS_DATA_RECEIVED_ACK) {\r\n                        const ack = !!(value & TWCR_TWEA);\r\n                        this.eventHandler.readByte(ack);\r\n                    }\r\n                };\r\n                this.cpu.data[config.TWCR] = value;\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.nextTick) {\r\n            this.nextTick();\r\n            this.nextTick = null;\r\n        }\r\n        if (this.cpu.interruptsEnabled) {\r\n            const { TWCR, twiInterrupt } = this.config;\r\n            if (this.cpu.data[TWCR] & TWCR_TWIE && this.cpu.data[TWCR] & TWCR_TWINT) {\r\n                avrInterrupt(this.cpu, twiInterrupt);\r\n                this.cpu.data[TWCR] &= ~TWCR_TWINT;\r\n            }\r\n        }\r\n    }\r\n    get prescaler() {\r\n        switch (this.cpu.data[this.config.TWSR] & TWSR_TWPS_MASK) {\r\n            case 0:\r\n                return 1;\r\n            case 1:\r\n                return 4;\r\n            case 2:\r\n                return 16;\r\n            case 3:\r\n                return 64;\r\n        }\r\n        // We should never get here:\r\n        throw new Error('Invalid prescaler value!');\r\n    }\r\n    get sclFrequency() {\r\n        return this.freqMHz / (16 + 2 * this.cpu.data[this.config.TWBR] * this.prescaler);\r\n    }\r\n    completeStart() {\r\n        this.updateStatus(this.status === STATUS_TWI_IDLE ? STATUS_START : STATUS_REPEATED_START);\r\n    }\r\n    completeStop() {\r\n        this.cpu.data[this.config.TWCR] &= ~TWCR_TWSTO;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n    }\r\n    completeConnect(ack) {\r\n        if (this.cpu.data[this.config.TWDR] & 0x1) {\r\n            this.updateStatus(ack ? STATUS_SLAR_ACK : STATUS_SLAR_NACK);\r\n        }\r\n        else {\r\n            this.updateStatus(ack ? STATUS_SLAW_ACK : STATUS_SLAW_NACK);\r\n        }\r\n    }\r\n    completeWrite(ack) {\r\n        this.updateStatus(ack ? STATUS_DATA_SENT_ACK : STATUS_DATA_SENT_NACK);\r\n    }\r\n    completeRead(value) {\r\n        const ack = !!(this.cpu.data[this.config.TWCR] & TWCR_TWEA);\r\n        this.cpu.data[this.config.TWDR] = value;\r\n        this.updateStatus(ack ? STATUS_DATA_RECEIVED_ACK : STATUS_DATA_RECEIVED_NACK);\r\n    }\r\n    get status() {\r\n        return this.cpu.data[this.config.TWSR] & TWSR_TWS_MASK;\r\n    }\r\n    updateStatus(value) {\r\n        const { TWCR, TWSR } = this.config;\r\n        this.cpu.data[TWSR] = (this.cpu.data[TWSR] & ~TWSR_TWS_MASK) | value;\r\n        this.cpu.data[TWCR] |= TWCR_TWINT;\r\n    }\r\n}\r\n","/**\r\n * AVR8js\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nexport { CPU } from './cpu/cpu';\r\nexport { avrInstruction } from './cpu/instruction';\r\nexport { avrInterrupt } from './cpu/interrupt';\r\nexport { AVRTimer, timer0Config, timer1Config, timer2Config } from './peripherals/timer';\r\nexport { AVRIOPort, portAConfig, portBConfig, portCConfig, portDConfig, portEConfig, portFConfig, portGConfig, portHConfig, portJConfig, portKConfig, portLConfig, PinState } from './peripherals/gpio';\r\nexport { AVRUSART, usart0Config } from './peripherals/usart';\r\nexport * from './peripherals/twi';\r\n","/**\n * Minimal Intel HEX loader\n * Part of AVR8js\n *\n * Copyright (C) 2019, Uri Shaked\n */\n\nexport function loadHex(source: string, target: Uint8Array) {\n  for (const line of source.split('\\n')) {\n    if (line[0] === ':' && line.substr(7, 2) === '00') {\n      const bytes = parseInt(line.substr(1, 2), 16);\n      const addr = parseInt(line.substr(3, 4), 16);\n      for (let i = 0; i < bytes; i++) {\n        target[addr + i] = parseInt(line.substr(9 + i * 2, 2), 16);\n      }\n    }\n  }\n}","// Faster setTimeout(fn, 0) implementation using postMessage API\n// Based on https://dbaron.org/log/20100309-faster-timeouts\nexport type IMicroTaskCallback = () => void;\n\nexport class MicroTaskScheduler {\n  readonly messageName = 'zero-timeout-message';\n\n  private executionQueue: Array<IMicroTaskCallback> = [];\n  private stopped = true;\n\n  start() {\n    if (this.stopped) {\n      this.stopped = false;\n      window.addEventListener('message', this.handleMessage, true);\n    }\n  }\n\n  stop() {\n    this.stopped = true;\n    window.removeEventListener('message', this.handleMessage, true);\n  }\n\n  postTask(fn: IMicroTaskCallback) {\n    if (!this.stopped) {\n      this.executionQueue.push(fn);\n      window.postMessage(this.messageName, '*');\n    }\n  }\n\n  private handleMessage = (event: MessageEvent) => {\n    if (event.data === this.messageName) {\n      event.stopPropagation();\n      const executeJob = this.executionQueue.shift();\n      if (executeJob !== undefined) {\n        executeJob();\n      }\n    }\n  };\n}","import {\n  avrInstruction,\n  AVRTimer,\n  CPU,\n  timer0Config,\n  AVRIOPort,\n  AVRUSART,\n  portBConfig,\n  portCConfig,\n  portDConfig,\n  usart0Config\n} from 'avr8js';\nimport { loadHex } from './intelhex';\nimport { MicroTaskScheduler } from './task-scheduler';\n\n// ATmega328p params\nconst FLASH = 0x8000;\n\nexport class AVRRunner {\n  readonly program = new Uint16Array(FLASH);\n  readonly cpu: CPU;\n  readonly timer: AVRTimer;\n  readonly portB: AVRIOPort;\n  readonly portC: AVRIOPort;\n  readonly portD: AVRIOPort;\n  readonly usart: AVRUSART;\n  readonly speed = 16e6; // 16 MHZ\n  readonly workUnitCycles = 500000;\n  readonly taskScheduler = new MicroTaskScheduler();\n\n  constructor(hex: string) {\n    loadHex(hex, new Uint8Array(this.program.buffer));\n    this.cpu = new CPU(this.program);\n    this.timer = new AVRTimer(this.cpu, timer0Config);\n    this.portB = new AVRIOPort(this.cpu, portBConfig);\n    this.portC = new AVRIOPort(this.cpu, portCConfig);\n    this.portD = new AVRIOPort(this.cpu, portDConfig);\n    this.usart = new AVRUSART(this.cpu, usart0Config, this.speed);\n    this.taskScheduler.start();\n  }\n\n  // CPU main loop\n  execute(callback: (cpu: CPU) => void) {\n    const cyclesToRun = this.cpu.cycles + this.workUnitCycles;\n    while (this.cpu.cycles < cyclesToRun) {\n      avrInstruction(this.cpu);\n      this.timer.tick();\n      this.usart.tick();\n    }\n\n    callback(this.cpu);\n    this.taskScheduler.postTask(() => this.execute(callback));\n  }\n\n  stop() {\n    this.taskScheduler.stop();\n  }\n}","function zeroPad(value: number, length: number) {\n  let sval = value.toString();\n  while (sval.length < length) {\n    sval = '0' + sval;\n  }\n  return sval;\n}\n\nexport function formatTime(seconds: number) {\n  const ms = Math.floor(seconds * 1000) % 1000;\n  const secs = Math.floor(seconds % 60);\n  const mins = Math.floor(seconds / 60);\n  return `${zeroPad(mins, 2)}:${zeroPad(secs, 2)}.${zeroPad(ms, 3)}`;\n}","import { ICPU } from 'avr8js';\n\nexport class CPUPerformance {\n  private prevTime = 0;\n  private prevCycles = 0;\n  private samples = new Float32Array(64);\n  private sampleIndex = 0;\n\n  constructor(private cpu: ICPU, private MHZ: number) {}\n\n  reset() {\n    this.prevTime = 0;\n    this.prevCycles = 0;\n    this.sampleIndex = 0;\n  }\n\n  update() {\n    if (this.prevTime) {\n      const delta = performance.now() - this.prevTime;\n      const deltaCycles = this.cpu.cycles - this.prevCycles;\n      const deltaCpuMillis = 1000 * (deltaCycles / this.MHZ);\n      const factor = deltaCpuMillis / delta;\n      if (!this.sampleIndex) {\n        this.samples.fill(factor);\n      }\n      this.samples[this.sampleIndex++ % this.samples.length] = factor;\n    }\n    this.prevCycles = this.cpu.cycles;\n    this.prevTime = performance.now();\n    const avg = this.samples.reduce((x, y) => x + y) / this.samples.length;\n    return avg;\n  }\n}","const AVRJS8_EDITOR_HISTORY = 'AVRJS8_EDITOR_HISTORY';\n\nexport class EditorHistoryUtil {\n  static hasLocalStorage = !!window.localStorage;\n\n  static storeSnippet(codeSnippet: string) {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    window.localStorage.setItem(AVRJS8_EDITOR_HISTORY, codeSnippet);\n  }\n\n  static clearSnippet() {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    localStorage.removeItem(AVRJS8_EDITOR_HISTORY);\n  }\n\n  static getValue() {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    return localStorage.getItem(AVRJS8_EDITOR_HISTORY);\n  }\n}\n","import '@wokwi/elements';\nimport { buildHex } from './compile';\nimport { AVRRunner } from './execute';\nimport { formatTime } from './format-time';\nimport './index.css';\nimport { CPUPerformance } from './cpu-performance';\nimport { LEDElement } from '@wokwi/elements';\nimport { EditorHistoryUtil } from './utils/editor-history.util';\n\nlet editor: any; // eslint-disable-line @typescript-eslint/no-explicit-any\nconst BLINK_CODE = `\n// Green LED connected to LED_BUILTIN,\n// Red LED connected to pin 12. Enjoy!\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(LED_BUILTIN, OUTPUT);\n}\nvoid loop() {\n  Serial.println(\"Blink\");\n  digitalWrite(LED_BUILTIN, HIGH);\n  delay(500);\n  digitalWrite(LED_BUILTIN, LOW);\n  delay(500);\n}`.trim();\n\n// Load Editor\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\ndeclare const monaco: any; // eslint-disable-line @typescript-eslint/no-explicit-any\nwindow.require.config({\n  paths: { vs: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs' }\n});\nwindow.require(['vs/editor/editor.main'], () => {\n  editor = monaco.editor.create(document.querySelector('.code-editor'), {\n    value: EditorHistoryUtil.getValue() || BLINK_CODE,\n    language: 'cpp',\n    minimap: { enabled: false }\n  });\n});\n\n// Set up LEDs\nconst led13 = document.querySelector<LEDElement>('wokwi-led[color=green]');\nconst led12 = document.querySelector<LEDElement>('wokwi-led[color=red]');\n\n// Set up toolbar\nlet runner: AVRRunner;\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst runButton = document.querySelector('#run-button');\nrunButton.addEventListener('click', compileAndRun);\nconst stopButton = document.querySelector('#stop-button');\nstopButton.addEventListener('click', stopCode);\nconst revertButton = document.querySelector('#revert-button');\nrevertButton.addEventListener('click', setBlinkSnippet);\nconst statusLabel = document.querySelector('#status-label');\nconst compilerOutputText = document.querySelector('#compiler-output-text');\nconst serialOutputText = document.querySelector('#serial-output-text');\n\nfunction executeProgram(hex: string) {\n  runner = new AVRRunner(hex);\n  const MHZ = 16000000;\n\n  // Hook to PORTB register\n  runner.portB.addListener((value) => {\n    const D12bit = 1 << 4;\n    const D13bit = 1 << 5;\n    led12.value = value & D12bit ? true : false;\n    led13.value = value & D13bit ? true : false;\n  });\n  runner.usart.onByteTransmit = (value) => {\n    serialOutputText.textContent += String.fromCharCode(value);\n  };\n  const cpuPerf = new CPUPerformance(runner.cpu, MHZ);\n  runner.execute((cpu) => {\n    const time = formatTime(cpu.cycles / MHZ);\n    const speed = (cpuPerf.update() * 100).toFixed(0);\n    statusLabel.textContent = `Simulation time: ${time} (${speed}%)`;\n  });\n}\n\nasync function compileAndRun() {\n  led12.value = false;\n  led13.value = false;\n\n  storeUserSnippet();\n\n  runButton.setAttribute('disabled', '1');\n  revertButton.setAttribute('disabled', '1');\n\n  serialOutputText.textContent = '';\n  try {\n    statusLabel.textContent = 'Compiling...';\n    const result = await buildHex(editor.getModel().getValue());\n    compilerOutputText.textContent = result.stderr || result.stdout;\n    if (result.hex) {\n      compilerOutputText.textContent += '\\nProgram running...';\n      stopButton.removeAttribute('disabled');\n      executeProgram(result.hex);\n    } else {\n      runButton.removeAttribute('disabled');\n    }\n  } catch (err) {\n    runButton.removeAttribute('disabled');\n    revertButton.removeAttribute('disabled');\n    alert('Failed: ' + err);\n  } finally {\n    statusLabel.textContent = '';\n  }\n}\n\nfunction storeUserSnippet() {\n  EditorHistoryUtil.clearSnippet();\n  EditorHistoryUtil.storeSnippet(editor.getValue());\n}\n\nfunction stopCode() {\n  stopButton.setAttribute('disabled', '1');\n  runButton.removeAttribute('disabled');\n  revertButton.removeAttribute('disabled');\n  if (runner) {\n    runner.stop();\n    runner = null;\n  }\n}\n\nfunction setBlinkSnippet() {\n  editor.setValue(BLINK_CODE);\n  EditorHistoryUtil.storeSnippet(editor.getValue());\n}\n"]}